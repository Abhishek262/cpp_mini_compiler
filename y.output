Terminals unused in grammar

    INCLUDE
    AND
    OR
    '<'
    '>'


State 215 conflicts: 2 shift/reduce


Grammar

    0 $accept: start $end

    1 start: Declaration
    2      | Function
    3      | start Function
    4      | start Declaration

    5 Declaration: Type Assignment ';'
    6            | Assignment ';'
    7            | FunctionCall ';'
    8            | ArrayUsage ';'
    9            | Type ArrayUsage ';'
   10            | StructStmt ';'
   11            | ClassStmt ';'
   12            | error

   13 Arg: Type ID

   14 Assignment: ID '=' Assignment
   15           | ID '=' FunctionCall
   16           | ID '=' ArrayUsage
   17           | ArrayUsage '=' Assignment
   18           | ID ',' Assignment
   19           | NUM ',' Assignment
   20           | ID '+' Assignment
   21           | ID '-' Assignment
   22           | ID '*' Assignment
   23           | ID '/' Assignment
   24           | NUM '+' Assignment
   25           | NUM '-' Assignment
   26           | NUM '*' Assignment
   27           | NUM '/' Assignment
   28           | '\'' Assignment '\''
   29           | '(' Assignment ')'
   30           | '-' '(' Assignment ')'
   31           | '-' NUM
   32           | '-' ID
   33           | NUM
   34           | ID

   35 FunctionCall: ID '(' ')'
   36             | ID '(' Assignment ')'
   37             | CUSTOM DOT FNAME '(' ')'
   38             | CUSTOM DOT NFNAM '(' ')'

   39 ArrayUsage: ID '[' Assignment ']'

   40 Function: Type ID '(' ArgListOpt ')' CompoundStmt
   41         | Type FNAME '(' ')' CompoundStmt

   42 ArgListOpt: ArgList
   43           | %empty

   44 ArgList: ArgList ',' Arg
   45        | Arg

   46 CompoundStmt: '{' StmtList '}'

   47 StmtList: StmtList Stmt
   48         | %empty

   49 Stmt: WhileStmt
   50     | Declaration
   51     | ForStmt
   52     | IfStmt
   53     | ElseStmt
   54     | ElseIfStmt
   55     | PrintFunc
   56     | SwitchStmt
   57     | coutstatement
   58     | cinstatement
   59     | ';'

   60 Type: INT
   61     | FLOAT
   62     | CHAR
   63     | DOUBLE
   64     | VOID
   65     | CUSTOM

   66 WhileStmt: WHILE '(' Expr ')' Stmt
   67          | WHILE '(' Expr ')' CompoundStmt

   68 ForStmt: FOR '(' Expr ';' Expr ';' Expr ')' Stmt
   69        | FOR '(' Expr ';' Expr ';' Expr ')' CompoundStmt
   70        | FOR '(' Expr ')' Stmt
   71        | FOR '(' Expr ')' CompoundStmt

   72 IfStmt: IF '(' Expr ')' Stmt
   73       | IF '(' Expr ')' CompoundStmt

   74 ElseStmt: ELSE Stmt
   75         | ELSE CompoundStmt

   76 ElseIfStmt: ELSEIF '(' Expr ')' Stmt
   77           | ELSEIF '(' Expr ')' CompoundStmt

   78 SwitchStmt: SWITCH '(' ID ')' '{' InnerSwitchStmt '}'

   79 InnerSwitchStmt: SwitchCaseStmt
   80                | SwitchCaseStmt DefaultSwitchStmt

   81 SwitchCaseStmt: SwitchCaseStmt SwitchCaseStmt
   82               | CASE NUM ':' Stmt
   83               | BREAK ';'

   84 DefaultSwitchStmt: DEFAULT ':' Stmt BREAK ';'

   85 StructStmt: STRUCT ID '{' Declaration '}'

   86 ClassStmt: CLASS ID '{' ACCESS ':' start ACCESS ':' start '}'
   87          | CLASS ID ':' ACCESS ID '{' ACCESS ':' start ACCESS ':' start '}'

   88 PrintFunc: PRINTF '(' Expr ')' ';'

   89 Expr: %empty
   90     | Expr LE Expr
   91     | Expr GE Expr
   92     | Expr NE Expr
   93     | Expr EQ Expr
   94     | Expr GT Expr
   95     | Expr LT Expr
   96     | Assignment
   97     | ArrayUsage

   98 coutstatement: COUT COUTOP COUTSTR COUTOP ENDL

   99 cinstatement: CIN CINOP ID


Terminals, with rules where they appear

    $end (0) 0
    '\'' (39) 28
    '(' (40) 29 30 35 36 37 38 40 41 66 67 68 69 70 71 72 73 76 77 78 88
    ')' (41) 29 30 35 36 37 38 40 41 66 67 68 69 70 71 72 73 76 77 78 88
    '*' (42) 22 26
    '+' (43) 20 24
    ',' (44) 18 19 44
    '-' (45) 21 25 30 31 32
    '/' (47) 23 27
    ':' (58) 82 84 86 87
    ';' (59) 5 6 7 8 9 10 11 59 68 69 83 84 88
    '<' (60)
    '=' (61) 14 15 16 17
    '>' (62)
    '[' (91) 39
    ']' (93) 39
    '{' (123) 46 78 85 86 87
    '}' (125) 46 78 85 86 87
    error (256) 12
    INT (258) 60
    FLOAT (259) 61
    CHAR (260) 62
    DOUBLE (261) 63
    VOID (262) 64
    FOR (263) 68 69 70 71
    WHILE (264) 66 67
    IF (265) 72 73
    ELSE (266) 74 75
    PRINTF (267) 88
    ELSEIF (268) 76 77
    STRUCT (269) 85
    CLASS (270) 86 87
    NUM (271) 19 24 25 26 27 31 33 82
    ID (272) 13 14 15 16 18 20 21 22 23 32 34 35 36 39 40 78 85 86 87 99
    INCLUDE (273)
    DOT (274) 37 38
    COUTSTR (275) 98
    COUT (276) 98
    ENDL (277) 98
    COUTOP (278) 98
    CIN (279) 99
    CINOP (280) 99
    ACCESS (281) 86 87
    CUSTOM (282) 37 38 65
    FNAME (283) 37 41
    NFNAM (284) 38
    SWITCH (285) 78
    BREAK (286) 83 84
    DEFAULT (287) 84
    CASE (288) 82
    AND (289)
    OR (290)
    LE (291) 90
    GE (292) 91
    EQ (293) 93
    NE (294) 92
    LT (295) 95
    GT (296) 94


Nonterminals, with rules where they appear

    $accept (59)
        on left: 0
    start (60)
        on left: 1 2 3 4
        on right: 0 3 4 86 87
    Declaration (61)
        on left: 5 6 7 8 9 10 11 12
        on right: 1 4 50 85
    Arg (62)
        on left: 13
        on right: 44 45
    Assignment (63)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
        on right: 5 6 14 17 18 19 20 21 22 23 24 25 26 27 28 29 30 36 39 96
    FunctionCall (64)
        on left: 35 36 37 38
        on right: 7 15
    ArrayUsage (65)
        on left: 39
        on right: 8 9 16 17 97
    Function (66)
        on left: 40 41
        on right: 2 3
    ArgListOpt (67)
        on left: 42 43
        on right: 40
    ArgList (68)
        on left: 44 45
        on right: 42 44
    CompoundStmt (69)
        on left: 46
        on right: 40 41 67 69 71 73 75 77
    StmtList (70)
        on left: 47 48
        on right: 46 47
    Stmt (71)
        on left: 49 50 51 52 53 54 55 56 57 58 59
        on right: 47 66 68 70 72 74 76 82 84
    Type (72)
        on left: 60 61 62 63 64 65
        on right: 5 9 13 40 41
    WhileStmt (73)
        on left: 66 67
        on right: 49
    ForStmt (74)
        on left: 68 69 70 71
        on right: 51
    IfStmt (75)
        on left: 72 73
        on right: 52
    ElseStmt (76)
        on left: 74 75
        on right: 53
    ElseIfStmt (77)
        on left: 76 77
        on right: 54
    SwitchStmt (78)
        on left: 78
        on right: 56
    InnerSwitchStmt (79)
        on left: 79 80
        on right: 78
    SwitchCaseStmt (80)
        on left: 81 82 83
        on right: 79 80 81
    DefaultSwitchStmt (81)
        on left: 84
        on right: 80
    StructStmt (82)
        on left: 85
        on right: 10
    ClassStmt (83)
        on left: 86 87
        on right: 11
    PrintFunc (84)
        on left: 88
        on right: 55
    Expr (85)
        on left: 89 90 91 92 93 94 95 96 97
        on right: 66 67 68 69 70 71 72 73 76 77 88 90 91 92 93 94 95
    coutstatement (86)
        on left: 98
        on right: 57
    cinstatement (87)
        on left: 99
        on right: 58


State 0

    0 $accept: . start $end

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    CUSTOM  shift, and go to state 11
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14

    start         go to state 15
    Declaration   go to state 16
    Assignment    go to state 17
    FunctionCall  go to state 18
    ArrayUsage    go to state 19
    Function      go to state 20
    Type          go to state 21
    StructStmt    go to state 22
    ClassStmt     go to state 23


State 1

   12 Declaration: error .

    $default  reduce using rule 12 (Declaration)


State 2

   60 Type: INT .

    $default  reduce using rule 60 (Type)


State 3

   61 Type: FLOAT .

    $default  reduce using rule 61 (Type)


State 4

   62 Type: CHAR .

    $default  reduce using rule 62 (Type)


State 5

   63 Type: DOUBLE .

    $default  reduce using rule 63 (Type)


State 6

   64 Type: VOID .

    $default  reduce using rule 64 (Type)


State 7

   85 StructStmt: STRUCT . ID '{' Declaration '}'

    ID  shift, and go to state 24


State 8

   86 ClassStmt: CLASS . ID '{' ACCESS ':' start ACCESS ':' start '}'
   87          | CLASS . ID ':' ACCESS ID '{' ACCESS ':' start ACCESS ':' start '}'

    ID  shift, and go to state 25


State 9

   19 Assignment: NUM . ',' Assignment
   24           | NUM . '+' Assignment
   25           | NUM . '-' Assignment
   26           | NUM . '*' Assignment
   27           | NUM . '/' Assignment
   33           | NUM .

    ','  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 33 (Assignment)


State 10

   14 Assignment: ID . '=' Assignment
   15           | ID . '=' FunctionCall
   16           | ID . '=' ArrayUsage
   18           | ID . ',' Assignment
   20           | ID . '+' Assignment
   21           | ID . '-' Assignment
   22           | ID . '*' Assignment
   23           | ID . '/' Assignment
   34           | ID .
   35 FunctionCall: ID . '(' ')'
   36             | ID . '(' Assignment ')'
   39 ArrayUsage: ID . '[' Assignment ']'

    '='  shift, and go to state 31
    ','  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '('  shift, and go to state 37
    '['  shift, and go to state 38

    $default  reduce using rule 34 (Assignment)


State 11

   37 FunctionCall: CUSTOM . DOT FNAME '(' ')'
   38             | CUSTOM . DOT NFNAM '(' ')'
   65 Type: CUSTOM .

    DOT  shift, and go to state 39

    $default  reduce using rule 65 (Type)


State 12

   30 Assignment: '-' . '(' Assignment ')'
   31           | '-' . NUM
   32           | '-' . ID

    NUM  shift, and go to state 40
    ID   shift, and go to state 41
    '('  shift, and go to state 42


State 13

   28 Assignment: '\'' . Assignment '\''

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 44
    ArrayUsage  go to state 45


State 14

   29 Assignment: '(' . Assignment ')'

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 46
    ArrayUsage  go to state 45


State 15

    0 $accept: start . $end
    3 start: start . Function
    4      | start . Declaration

    $end    shift, and go to state 47
    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    CUSTOM  shift, and go to state 11
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14

    Declaration   go to state 48
    Assignment    go to state 17
    FunctionCall  go to state 18
    ArrayUsage    go to state 19
    Function      go to state 49
    Type          go to state 21
    StructStmt    go to state 22
    ClassStmt     go to state 23


State 16

    1 start: Declaration .

    $default  reduce using rule 1 (start)


State 17

    6 Declaration: Assignment . ';'

    ';'  shift, and go to state 50


State 18

    7 Declaration: FunctionCall . ';'

    ';'  shift, and go to state 51


State 19

    8 Declaration: ArrayUsage . ';'
   17 Assignment: ArrayUsage . '=' Assignment

    '='  shift, and go to state 52
    ';'  shift, and go to state 53


State 20

    2 start: Function .

    $default  reduce using rule 2 (start)


State 21

    5 Declaration: Type . Assignment ';'
    9            | Type . ArrayUsage ';'
   40 Function: Type . ID '(' ArgListOpt ')' CompoundStmt
   41         | Type . FNAME '(' ')' CompoundStmt

    NUM    shift, and go to state 9
    ID     shift, and go to state 54
    FNAME  shift, and go to state 55
    '-'    shift, and go to state 12
    '\''   shift, and go to state 13
    '('    shift, and go to state 14

    Assignment  go to state 56
    ArrayUsage  go to state 57


State 22

   10 Declaration: StructStmt . ';'

    ';'  shift, and go to state 58


State 23

   11 Declaration: ClassStmt . ';'

    ';'  shift, and go to state 59


State 24

   85 StructStmt: STRUCT ID . '{' Declaration '}'

    '{'  shift, and go to state 60


State 25

   86 ClassStmt: CLASS ID . '{' ACCESS ':' start ACCESS ':' start '}'
   87          | CLASS ID . ':' ACCESS ID '{' ACCESS ':' start ACCESS ':' start '}'

    '{'  shift, and go to state 61
    ':'  shift, and go to state 62


State 26

   19 Assignment: NUM ',' . Assignment

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 63
    ArrayUsage  go to state 45


State 27

   24 Assignment: NUM '+' . Assignment

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 64
    ArrayUsage  go to state 45


State 28

   25 Assignment: NUM '-' . Assignment

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 65
    ArrayUsage  go to state 45


State 29

   26 Assignment: NUM '*' . Assignment

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 66
    ArrayUsage  go to state 45


State 30

   27 Assignment: NUM '/' . Assignment

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 67
    ArrayUsage  go to state 45


State 31

   14 Assignment: ID '=' . Assignment
   15           | ID '=' . FunctionCall
   16           | ID '=' . ArrayUsage

    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    CUSTOM  shift, and go to state 68
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14

    Assignment    go to state 69
    FunctionCall  go to state 70
    ArrayUsage    go to state 71


State 32

   18 Assignment: ID ',' . Assignment

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 72
    ArrayUsage  go to state 45


State 33

   20 Assignment: ID '+' . Assignment

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 73
    ArrayUsage  go to state 45


State 34

   21 Assignment: ID '-' . Assignment

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 74
    ArrayUsage  go to state 45


State 35

   22 Assignment: ID '*' . Assignment

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 75
    ArrayUsage  go to state 45


State 36

   23 Assignment: ID '/' . Assignment

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 76
    ArrayUsage  go to state 45


State 37

   35 FunctionCall: ID '(' . ')'
   36             | ID '(' . Assignment ')'

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14
    ')'   shift, and go to state 77

    Assignment  go to state 78
    ArrayUsage  go to state 45


State 38

   39 ArrayUsage: ID '[' . Assignment ']'

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 79
    ArrayUsage  go to state 45


State 39

   37 FunctionCall: CUSTOM DOT . FNAME '(' ')'
   38             | CUSTOM DOT . NFNAM '(' ')'

    FNAME  shift, and go to state 80
    NFNAM  shift, and go to state 81


State 40

   31 Assignment: '-' NUM .

    $default  reduce using rule 31 (Assignment)


State 41

   32 Assignment: '-' ID .

    $default  reduce using rule 32 (Assignment)


State 42

   30 Assignment: '-' '(' . Assignment ')'

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 82
    ArrayUsage  go to state 45


State 43

   14 Assignment: ID . '=' Assignment
   15           | ID . '=' FunctionCall
   16           | ID . '=' ArrayUsage
   18           | ID . ',' Assignment
   20           | ID . '+' Assignment
   21           | ID . '-' Assignment
   22           | ID . '*' Assignment
   23           | ID . '/' Assignment
   34           | ID .
   39 ArrayUsage: ID . '[' Assignment ']'

    '='  shift, and go to state 31
    ','  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '['  shift, and go to state 38

    $default  reduce using rule 34 (Assignment)


State 44

   28 Assignment: '\'' Assignment . '\''

    '\''  shift, and go to state 83


State 45

   17 Assignment: ArrayUsage . '=' Assignment

    '='  shift, and go to state 52


State 46

   29 Assignment: '(' Assignment . ')'

    ')'  shift, and go to state 84


State 47

    0 $accept: start $end .

    $default  accept


State 48

    4 start: start Declaration .

    $default  reduce using rule 4 (start)


State 49

    3 start: start Function .

    $default  reduce using rule 3 (start)


State 50

    6 Declaration: Assignment ';' .

    $default  reduce using rule 6 (Declaration)


State 51

    7 Declaration: FunctionCall ';' .

    $default  reduce using rule 7 (Declaration)


State 52

   17 Assignment: ArrayUsage '=' . Assignment

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 85
    ArrayUsage  go to state 45


State 53

    8 Declaration: ArrayUsage ';' .

    $default  reduce using rule 8 (Declaration)


State 54

   14 Assignment: ID . '=' Assignment
   15           | ID . '=' FunctionCall
   16           | ID . '=' ArrayUsage
   18           | ID . ',' Assignment
   20           | ID . '+' Assignment
   21           | ID . '-' Assignment
   22           | ID . '*' Assignment
   23           | ID . '/' Assignment
   34           | ID .
   39 ArrayUsage: ID . '[' Assignment ']'
   40 Function: Type ID . '(' ArgListOpt ')' CompoundStmt

    '='  shift, and go to state 31
    ','  shift, and go to state 32
    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    '('  shift, and go to state 86
    '['  shift, and go to state 38

    $default  reduce using rule 34 (Assignment)


State 55

   41 Function: Type FNAME . '(' ')' CompoundStmt

    '('  shift, and go to state 87


State 56

    5 Declaration: Type Assignment . ';'

    ';'  shift, and go to state 88


State 57

    9 Declaration: Type ArrayUsage . ';'
   17 Assignment: ArrayUsage . '=' Assignment

    '='  shift, and go to state 52
    ';'  shift, and go to state 89


State 58

   10 Declaration: StructStmt ';' .

    $default  reduce using rule 10 (Declaration)


State 59

   11 Declaration: ClassStmt ';' .

    $default  reduce using rule 11 (Declaration)


State 60

   85 StructStmt: STRUCT ID '{' . Declaration '}'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    CUSTOM  shift, and go to state 11
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14

    Declaration   go to state 90
    Assignment    go to state 17
    FunctionCall  go to state 18
    ArrayUsage    go to state 19
    Type          go to state 91
    StructStmt    go to state 22
    ClassStmt     go to state 23


State 61

   86 ClassStmt: CLASS ID '{' . ACCESS ':' start ACCESS ':' start '}'

    ACCESS  shift, and go to state 92


State 62

   87 ClassStmt: CLASS ID ':' . ACCESS ID '{' ACCESS ':' start ACCESS ':' start '}'

    ACCESS  shift, and go to state 93


State 63

   19 Assignment: NUM ',' Assignment .

    $default  reduce using rule 19 (Assignment)


State 64

   24 Assignment: NUM '+' Assignment .

    $default  reduce using rule 24 (Assignment)


State 65

   25 Assignment: NUM '-' Assignment .

    $default  reduce using rule 25 (Assignment)


State 66

   26 Assignment: NUM '*' Assignment .

    $default  reduce using rule 26 (Assignment)


State 67

   27 Assignment: NUM '/' Assignment .

    $default  reduce using rule 27 (Assignment)


State 68

   37 FunctionCall: CUSTOM . DOT FNAME '(' ')'
   38             | CUSTOM . DOT NFNAM '(' ')'

    DOT  shift, and go to state 39


State 69

   14 Assignment: ID '=' Assignment .

    $default  reduce using rule 14 (Assignment)


State 70

   15 Assignment: ID '=' FunctionCall .

    $default  reduce using rule 15 (Assignment)


State 71

   16 Assignment: ID '=' ArrayUsage .
   17           | ArrayUsage . '=' Assignment

    '='  shift, and go to state 52

    $default  reduce using rule 16 (Assignment)


State 72

   18 Assignment: ID ',' Assignment .

    $default  reduce using rule 18 (Assignment)


State 73

   20 Assignment: ID '+' Assignment .

    $default  reduce using rule 20 (Assignment)


State 74

   21 Assignment: ID '-' Assignment .

    $default  reduce using rule 21 (Assignment)


State 75

   22 Assignment: ID '*' Assignment .

    $default  reduce using rule 22 (Assignment)


State 76

   23 Assignment: ID '/' Assignment .

    $default  reduce using rule 23 (Assignment)


State 77

   35 FunctionCall: ID '(' ')' .

    $default  reduce using rule 35 (FunctionCall)


State 78

   36 FunctionCall: ID '(' Assignment . ')'

    ')'  shift, and go to state 94


State 79

   39 ArrayUsage: ID '[' Assignment . ']'

    ']'  shift, and go to state 95


State 80

   37 FunctionCall: CUSTOM DOT FNAME . '(' ')'

    '('  shift, and go to state 96


State 81

   38 FunctionCall: CUSTOM DOT NFNAM . '(' ')'

    '('  shift, and go to state 97


State 82

   30 Assignment: '-' '(' Assignment . ')'

    ')'  shift, and go to state 98


State 83

   28 Assignment: '\'' Assignment '\'' .

    $default  reduce using rule 28 (Assignment)


State 84

   29 Assignment: '(' Assignment ')' .

    $default  reduce using rule 29 (Assignment)


State 85

   17 Assignment: ArrayUsage '=' Assignment .

    $default  reduce using rule 17 (Assignment)


State 86

   40 Function: Type ID '(' . ArgListOpt ')' CompoundStmt

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    CUSTOM  shift, and go to state 99

    $default  reduce using rule 43 (ArgListOpt)

    Arg         go to state 100
    ArgListOpt  go to state 101
    ArgList     go to state 102
    Type        go to state 103


State 87

   41 Function: Type FNAME '(' . ')' CompoundStmt

    ')'  shift, and go to state 104


State 88

    5 Declaration: Type Assignment ';' .

    $default  reduce using rule 5 (Declaration)


State 89

    9 Declaration: Type ArrayUsage ';' .

    $default  reduce using rule 9 (Declaration)


State 90

   85 StructStmt: STRUCT ID '{' Declaration . '}'

    '}'  shift, and go to state 105


State 91

    5 Declaration: Type . Assignment ';'
    9            | Type . ArrayUsage ';'

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    Assignment  go to state 56
    ArrayUsage  go to state 57


State 92

   86 ClassStmt: CLASS ID '{' ACCESS . ':' start ACCESS ':' start '}'

    ':'  shift, and go to state 106


State 93

   87 ClassStmt: CLASS ID ':' ACCESS . ID '{' ACCESS ':' start ACCESS ':' start '}'

    ID  shift, and go to state 107


State 94

   36 FunctionCall: ID '(' Assignment ')' .

    $default  reduce using rule 36 (FunctionCall)


State 95

   39 ArrayUsage: ID '[' Assignment ']' .

    $default  reduce using rule 39 (ArrayUsage)


State 96

   37 FunctionCall: CUSTOM DOT FNAME '(' . ')'

    ')'  shift, and go to state 108


State 97

   38 FunctionCall: CUSTOM DOT NFNAM '(' . ')'

    ')'  shift, and go to state 109


State 98

   30 Assignment: '-' '(' Assignment ')' .

    $default  reduce using rule 30 (Assignment)


State 99

   65 Type: CUSTOM .

    $default  reduce using rule 65 (Type)


State 100

   45 ArgList: Arg .

    $default  reduce using rule 45 (ArgList)


State 101

   40 Function: Type ID '(' ArgListOpt . ')' CompoundStmt

    ')'  shift, and go to state 110


State 102

   42 ArgListOpt: ArgList .
   44 ArgList: ArgList . ',' Arg

    ','  shift, and go to state 111

    $default  reduce using rule 42 (ArgListOpt)


State 103

   13 Arg: Type . ID

    ID  shift, and go to state 112


State 104

   41 Function: Type FNAME '(' ')' . CompoundStmt

    '{'  shift, and go to state 113

    CompoundStmt  go to state 114


State 105

   85 StructStmt: STRUCT ID '{' Declaration '}' .

    $default  reduce using rule 85 (StructStmt)


State 106

   86 ClassStmt: CLASS ID '{' ACCESS ':' . start ACCESS ':' start '}'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    CUSTOM  shift, and go to state 11
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14

    start         go to state 115
    Declaration   go to state 16
    Assignment    go to state 17
    FunctionCall  go to state 18
    ArrayUsage    go to state 19
    Function      go to state 20
    Type          go to state 21
    StructStmt    go to state 22
    ClassStmt     go to state 23


State 107

   87 ClassStmt: CLASS ID ':' ACCESS ID . '{' ACCESS ':' start ACCESS ':' start '}'

    '{'  shift, and go to state 116


State 108

   37 FunctionCall: CUSTOM DOT FNAME '(' ')' .

    $default  reduce using rule 37 (FunctionCall)


State 109

   38 FunctionCall: CUSTOM DOT NFNAM '(' ')' .

    $default  reduce using rule 38 (FunctionCall)


State 110

   40 Function: Type ID '(' ArgListOpt ')' . CompoundStmt

    '{'  shift, and go to state 113

    CompoundStmt  go to state 117


State 111

   44 ArgList: ArgList ',' . Arg

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    CUSTOM  shift, and go to state 99

    Arg   go to state 118
    Type  go to state 103


State 112

   13 Arg: Type ID .

    $default  reduce using rule 13 (Arg)


State 113

   46 CompoundStmt: '{' . StmtList '}'

    $default  reduce using rule 48 (StmtList)

    StmtList  go to state 119


State 114

   41 Function: Type FNAME '(' ')' CompoundStmt .

    $default  reduce using rule 41 (Function)


State 115

    3 start: start . Function
    4      | start . Declaration
   86 ClassStmt: CLASS ID '{' ACCESS ':' start . ACCESS ':' start '}'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    ACCESS  shift, and go to state 120
    CUSTOM  shift, and go to state 11
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14

    Declaration   go to state 48
    Assignment    go to state 17
    FunctionCall  go to state 18
    ArrayUsage    go to state 19
    Function      go to state 49
    Type          go to state 21
    StructStmt    go to state 22
    ClassStmt     go to state 23


State 116

   87 ClassStmt: CLASS ID ':' ACCESS ID '{' . ACCESS ':' start ACCESS ':' start '}'

    ACCESS  shift, and go to state 121


State 117

   40 Function: Type ID '(' ArgListOpt ')' CompoundStmt .

    $default  reduce using rule 40 (Function)


State 118

   44 ArgList: ArgList ',' Arg .

    $default  reduce using rule 44 (ArgList)


State 119

   46 CompoundStmt: '{' StmtList . '}'
   47 StmtList: StmtList . Stmt

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    FOR     shift, and go to state 122
    WHILE   shift, and go to state 123
    IF      shift, and go to state 124
    ELSE    shift, and go to state 125
    PRINTF  shift, and go to state 126
    ELSEIF  shift, and go to state 127
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    COUT    shift, and go to state 128
    CIN     shift, and go to state 129
    CUSTOM  shift, and go to state 11
    SWITCH  shift, and go to state 130
    ';'     shift, and go to state 131
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14
    '}'     shift, and go to state 132

    Declaration    go to state 133
    Assignment     go to state 17
    FunctionCall   go to state 18
    ArrayUsage     go to state 19
    Stmt           go to state 134
    Type           go to state 91
    WhileStmt      go to state 135
    ForStmt        go to state 136
    IfStmt         go to state 137
    ElseStmt       go to state 138
    ElseIfStmt     go to state 139
    SwitchStmt     go to state 140
    StructStmt     go to state 22
    ClassStmt      go to state 23
    PrintFunc      go to state 141
    coutstatement  go to state 142
    cinstatement   go to state 143


State 120

   86 ClassStmt: CLASS ID '{' ACCESS ':' start ACCESS . ':' start '}'

    ':'  shift, and go to state 144


State 121

   87 ClassStmt: CLASS ID ':' ACCESS ID '{' ACCESS . ':' start ACCESS ':' start '}'

    ':'  shift, and go to state 145


State 122

   68 ForStmt: FOR . '(' Expr ';' Expr ';' Expr ')' Stmt
   69        | FOR . '(' Expr ';' Expr ';' Expr ')' CompoundStmt
   70        | FOR . '(' Expr ')' Stmt
   71        | FOR . '(' Expr ')' CompoundStmt

    '('  shift, and go to state 146


State 123

   66 WhileStmt: WHILE . '(' Expr ')' Stmt
   67          | WHILE . '(' Expr ')' CompoundStmt

    '('  shift, and go to state 147


State 124

   72 IfStmt: IF . '(' Expr ')' Stmt
   73       | IF . '(' Expr ')' CompoundStmt

    '('  shift, and go to state 148


State 125

   74 ElseStmt: ELSE . Stmt
   75         | ELSE . CompoundStmt

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    FOR     shift, and go to state 122
    WHILE   shift, and go to state 123
    IF      shift, and go to state 124
    ELSE    shift, and go to state 125
    PRINTF  shift, and go to state 126
    ELSEIF  shift, and go to state 127
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    COUT    shift, and go to state 128
    CIN     shift, and go to state 129
    CUSTOM  shift, and go to state 11
    SWITCH  shift, and go to state 130
    ';'     shift, and go to state 131
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14
    '{'     shift, and go to state 113

    Declaration    go to state 133
    Assignment     go to state 17
    FunctionCall   go to state 18
    ArrayUsage     go to state 19
    CompoundStmt   go to state 149
    Stmt           go to state 150
    Type           go to state 91
    WhileStmt      go to state 135
    ForStmt        go to state 136
    IfStmt         go to state 137
    ElseStmt       go to state 138
    ElseIfStmt     go to state 139
    SwitchStmt     go to state 140
    StructStmt     go to state 22
    ClassStmt      go to state 23
    PrintFunc      go to state 141
    coutstatement  go to state 142
    cinstatement   go to state 143


State 126

   88 PrintFunc: PRINTF . '(' Expr ')' ';'

    '('  shift, and go to state 151


State 127

   76 ElseIfStmt: ELSEIF . '(' Expr ')' Stmt
   77           | ELSEIF . '(' Expr ')' CompoundStmt

    '('  shift, and go to state 152


State 128

   98 coutstatement: COUT . COUTOP COUTSTR COUTOP ENDL

    COUTOP  shift, and go to state 153


State 129

   99 cinstatement: CIN . CINOP ID

    CINOP  shift, and go to state 154


State 130

   78 SwitchStmt: SWITCH . '(' ID ')' '{' InnerSwitchStmt '}'

    '('  shift, and go to state 155


State 131

   59 Stmt: ';' .

    $default  reduce using rule 59 (Stmt)


State 132

   46 CompoundStmt: '{' StmtList '}' .

    $default  reduce using rule 46 (CompoundStmt)


State 133

   50 Stmt: Declaration .

    $default  reduce using rule 50 (Stmt)


State 134

   47 StmtList: StmtList Stmt .

    $default  reduce using rule 47 (StmtList)


State 135

   49 Stmt: WhileStmt .

    $default  reduce using rule 49 (Stmt)


State 136

   51 Stmt: ForStmt .

    $default  reduce using rule 51 (Stmt)


State 137

   52 Stmt: IfStmt .

    $default  reduce using rule 52 (Stmt)


State 138

   53 Stmt: ElseStmt .

    $default  reduce using rule 53 (Stmt)


State 139

   54 Stmt: ElseIfStmt .

    $default  reduce using rule 54 (Stmt)


State 140

   56 Stmt: SwitchStmt .

    $default  reduce using rule 56 (Stmt)


State 141

   55 Stmt: PrintFunc .

    $default  reduce using rule 55 (Stmt)


State 142

   57 Stmt: coutstatement .

    $default  reduce using rule 57 (Stmt)


State 143

   58 Stmt: cinstatement .

    $default  reduce using rule 58 (Stmt)


State 144

   86 ClassStmt: CLASS ID '{' ACCESS ':' start ACCESS ':' . start '}'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    CUSTOM  shift, and go to state 11
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14

    start         go to state 156
    Declaration   go to state 16
    Assignment    go to state 17
    FunctionCall  go to state 18
    ArrayUsage    go to state 19
    Function      go to state 20
    Type          go to state 21
    StructStmt    go to state 22
    ClassStmt     go to state 23


State 145

   87 ClassStmt: CLASS ID ':' ACCESS ID '{' ACCESS ':' . start ACCESS ':' start '}'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    CUSTOM  shift, and go to state 11
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14

    start         go to state 157
    Declaration   go to state 16
    Assignment    go to state 17
    FunctionCall  go to state 18
    ArrayUsage    go to state 19
    Function      go to state 20
    Type          go to state 21
    StructStmt    go to state 22
    ClassStmt     go to state 23


State 146

   68 ForStmt: FOR '(' . Expr ';' Expr ';' Expr ')' Stmt
   69        | FOR '(' . Expr ';' Expr ';' Expr ')' CompoundStmt
   70        | FOR '(' . Expr ')' Stmt
   71        | FOR '(' . Expr ')' CompoundStmt

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 160


State 147

   66 WhileStmt: WHILE '(' . Expr ')' Stmt
   67          | WHILE '(' . Expr ')' CompoundStmt

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 161


State 148

   72 IfStmt: IF '(' . Expr ')' Stmt
   73       | IF '(' . Expr ')' CompoundStmt

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 162


State 149

   75 ElseStmt: ELSE CompoundStmt .

    $default  reduce using rule 75 (ElseStmt)


State 150

   74 ElseStmt: ELSE Stmt .

    $default  reduce using rule 74 (ElseStmt)


State 151

   88 PrintFunc: PRINTF '(' . Expr ')' ';'

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 163


State 152

   76 ElseIfStmt: ELSEIF '(' . Expr ')' Stmt
   77           | ELSEIF '(' . Expr ')' CompoundStmt

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 164


State 153

   98 coutstatement: COUT COUTOP . COUTSTR COUTOP ENDL

    COUTSTR  shift, and go to state 165


State 154

   99 cinstatement: CIN CINOP . ID

    ID  shift, and go to state 166


State 155

   78 SwitchStmt: SWITCH '(' . ID ')' '{' InnerSwitchStmt '}'

    ID  shift, and go to state 167


State 156

    3 start: start . Function
    4      | start . Declaration
   86 ClassStmt: CLASS ID '{' ACCESS ':' start ACCESS ':' start . '}'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    CUSTOM  shift, and go to state 11
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14
    '}'     shift, and go to state 168

    Declaration   go to state 48
    Assignment    go to state 17
    FunctionCall  go to state 18
    ArrayUsage    go to state 19
    Function      go to state 49
    Type          go to state 21
    StructStmt    go to state 22
    ClassStmt     go to state 23


State 157

    3 start: start . Function
    4      | start . Declaration
   87 ClassStmt: CLASS ID ':' ACCESS ID '{' ACCESS ':' start . ACCESS ':' start '}'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    ACCESS  shift, and go to state 169
    CUSTOM  shift, and go to state 11
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14

    Declaration   go to state 48
    Assignment    go to state 17
    FunctionCall  go to state 18
    ArrayUsage    go to state 19
    Function      go to state 49
    Type          go to state 21
    StructStmt    go to state 22
    ClassStmt     go to state 23


State 158

   96 Expr: Assignment .

    $default  reduce using rule 96 (Expr)


State 159

   17 Assignment: ArrayUsage . '=' Assignment
   97 Expr: ArrayUsage .

    '='  shift, and go to state 52

    $default  reduce using rule 97 (Expr)


State 160

   68 ForStmt: FOR '(' Expr . ';' Expr ';' Expr ')' Stmt
   69        | FOR '(' Expr . ';' Expr ';' Expr ')' CompoundStmt
   70        | FOR '(' Expr . ')' Stmt
   71        | FOR '(' Expr . ')' CompoundStmt
   90 Expr: Expr . LE Expr
   91     | Expr . GE Expr
   92     | Expr . NE Expr
   93     | Expr . EQ Expr
   94     | Expr . GT Expr
   95     | Expr . LT Expr

    LE   shift, and go to state 170
    GE   shift, and go to state 171
    EQ   shift, and go to state 172
    NE   shift, and go to state 173
    LT   shift, and go to state 174
    GT   shift, and go to state 175
    ';'  shift, and go to state 176
    ')'  shift, and go to state 177


State 161

   66 WhileStmt: WHILE '(' Expr . ')' Stmt
   67          | WHILE '(' Expr . ')' CompoundStmt
   90 Expr: Expr . LE Expr
   91     | Expr . GE Expr
   92     | Expr . NE Expr
   93     | Expr . EQ Expr
   94     | Expr . GT Expr
   95     | Expr . LT Expr

    LE   shift, and go to state 170
    GE   shift, and go to state 171
    EQ   shift, and go to state 172
    NE   shift, and go to state 173
    LT   shift, and go to state 174
    GT   shift, and go to state 175
    ')'  shift, and go to state 178


State 162

   72 IfStmt: IF '(' Expr . ')' Stmt
   73       | IF '(' Expr . ')' CompoundStmt
   90 Expr: Expr . LE Expr
   91     | Expr . GE Expr
   92     | Expr . NE Expr
   93     | Expr . EQ Expr
   94     | Expr . GT Expr
   95     | Expr . LT Expr

    LE   shift, and go to state 170
    GE   shift, and go to state 171
    EQ   shift, and go to state 172
    NE   shift, and go to state 173
    LT   shift, and go to state 174
    GT   shift, and go to state 175
    ')'  shift, and go to state 179


State 163

   88 PrintFunc: PRINTF '(' Expr . ')' ';'
   90 Expr: Expr . LE Expr
   91     | Expr . GE Expr
   92     | Expr . NE Expr
   93     | Expr . EQ Expr
   94     | Expr . GT Expr
   95     | Expr . LT Expr

    LE   shift, and go to state 170
    GE   shift, and go to state 171
    EQ   shift, and go to state 172
    NE   shift, and go to state 173
    LT   shift, and go to state 174
    GT   shift, and go to state 175
    ')'  shift, and go to state 180


State 164

   76 ElseIfStmt: ELSEIF '(' Expr . ')' Stmt
   77           | ELSEIF '(' Expr . ')' CompoundStmt
   90 Expr: Expr . LE Expr
   91     | Expr . GE Expr
   92     | Expr . NE Expr
   93     | Expr . EQ Expr
   94     | Expr . GT Expr
   95     | Expr . LT Expr

    LE   shift, and go to state 170
    GE   shift, and go to state 171
    EQ   shift, and go to state 172
    NE   shift, and go to state 173
    LT   shift, and go to state 174
    GT   shift, and go to state 175
    ')'  shift, and go to state 181


State 165

   98 coutstatement: COUT COUTOP COUTSTR . COUTOP ENDL

    COUTOP  shift, and go to state 182


State 166

   99 cinstatement: CIN CINOP ID .

    $default  reduce using rule 99 (cinstatement)


State 167

   78 SwitchStmt: SWITCH '(' ID . ')' '{' InnerSwitchStmt '}'

    ')'  shift, and go to state 183


State 168

   86 ClassStmt: CLASS ID '{' ACCESS ':' start ACCESS ':' start '}' .

    $default  reduce using rule 86 (ClassStmt)


State 169

   87 ClassStmt: CLASS ID ':' ACCESS ID '{' ACCESS ':' start ACCESS . ':' start '}'

    ':'  shift, and go to state 184


State 170

   90 Expr: Expr LE . Expr

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 185


State 171

   91 Expr: Expr GE . Expr

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 186


State 172

   93 Expr: Expr EQ . Expr

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 187


State 173

   92 Expr: Expr NE . Expr

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 188


State 174

   95 Expr: Expr LT . Expr

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 189


State 175

   94 Expr: Expr GT . Expr

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 190


State 176

   68 ForStmt: FOR '(' Expr ';' . Expr ';' Expr ')' Stmt
   69        | FOR '(' Expr ';' . Expr ';' Expr ')' CompoundStmt

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 191


State 177

   70 ForStmt: FOR '(' Expr ')' . Stmt
   71        | FOR '(' Expr ')' . CompoundStmt

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    FOR     shift, and go to state 122
    WHILE   shift, and go to state 123
    IF      shift, and go to state 124
    ELSE    shift, and go to state 125
    PRINTF  shift, and go to state 126
    ELSEIF  shift, and go to state 127
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    COUT    shift, and go to state 128
    CIN     shift, and go to state 129
    CUSTOM  shift, and go to state 11
    SWITCH  shift, and go to state 130
    ';'     shift, and go to state 131
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14
    '{'     shift, and go to state 113

    Declaration    go to state 133
    Assignment     go to state 17
    FunctionCall   go to state 18
    ArrayUsage     go to state 19
    CompoundStmt   go to state 192
    Stmt           go to state 193
    Type           go to state 91
    WhileStmt      go to state 135
    ForStmt        go to state 136
    IfStmt         go to state 137
    ElseStmt       go to state 138
    ElseIfStmt     go to state 139
    SwitchStmt     go to state 140
    StructStmt     go to state 22
    ClassStmt      go to state 23
    PrintFunc      go to state 141
    coutstatement  go to state 142
    cinstatement   go to state 143


State 178

   66 WhileStmt: WHILE '(' Expr ')' . Stmt
   67          | WHILE '(' Expr ')' . CompoundStmt

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    FOR     shift, and go to state 122
    WHILE   shift, and go to state 123
    IF      shift, and go to state 124
    ELSE    shift, and go to state 125
    PRINTF  shift, and go to state 126
    ELSEIF  shift, and go to state 127
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    COUT    shift, and go to state 128
    CIN     shift, and go to state 129
    CUSTOM  shift, and go to state 11
    SWITCH  shift, and go to state 130
    ';'     shift, and go to state 131
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14
    '{'     shift, and go to state 113

    Declaration    go to state 133
    Assignment     go to state 17
    FunctionCall   go to state 18
    ArrayUsage     go to state 19
    CompoundStmt   go to state 194
    Stmt           go to state 195
    Type           go to state 91
    WhileStmt      go to state 135
    ForStmt        go to state 136
    IfStmt         go to state 137
    ElseStmt       go to state 138
    ElseIfStmt     go to state 139
    SwitchStmt     go to state 140
    StructStmt     go to state 22
    ClassStmt      go to state 23
    PrintFunc      go to state 141
    coutstatement  go to state 142
    cinstatement   go to state 143


State 179

   72 IfStmt: IF '(' Expr ')' . Stmt
   73       | IF '(' Expr ')' . CompoundStmt

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    FOR     shift, and go to state 122
    WHILE   shift, and go to state 123
    IF      shift, and go to state 124
    ELSE    shift, and go to state 125
    PRINTF  shift, and go to state 126
    ELSEIF  shift, and go to state 127
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    COUT    shift, and go to state 128
    CIN     shift, and go to state 129
    CUSTOM  shift, and go to state 11
    SWITCH  shift, and go to state 130
    ';'     shift, and go to state 131
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14
    '{'     shift, and go to state 113

    Declaration    go to state 133
    Assignment     go to state 17
    FunctionCall   go to state 18
    ArrayUsage     go to state 19
    CompoundStmt   go to state 196
    Stmt           go to state 197
    Type           go to state 91
    WhileStmt      go to state 135
    ForStmt        go to state 136
    IfStmt         go to state 137
    ElseStmt       go to state 138
    ElseIfStmt     go to state 139
    SwitchStmt     go to state 140
    StructStmt     go to state 22
    ClassStmt      go to state 23
    PrintFunc      go to state 141
    coutstatement  go to state 142
    cinstatement   go to state 143


State 180

   88 PrintFunc: PRINTF '(' Expr ')' . ';'

    ';'  shift, and go to state 198


State 181

   76 ElseIfStmt: ELSEIF '(' Expr ')' . Stmt
   77           | ELSEIF '(' Expr ')' . CompoundStmt

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    FOR     shift, and go to state 122
    WHILE   shift, and go to state 123
    IF      shift, and go to state 124
    ELSE    shift, and go to state 125
    PRINTF  shift, and go to state 126
    ELSEIF  shift, and go to state 127
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    COUT    shift, and go to state 128
    CIN     shift, and go to state 129
    CUSTOM  shift, and go to state 11
    SWITCH  shift, and go to state 130
    ';'     shift, and go to state 131
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14
    '{'     shift, and go to state 113

    Declaration    go to state 133
    Assignment     go to state 17
    FunctionCall   go to state 18
    ArrayUsage     go to state 19
    CompoundStmt   go to state 199
    Stmt           go to state 200
    Type           go to state 91
    WhileStmt      go to state 135
    ForStmt        go to state 136
    IfStmt         go to state 137
    ElseStmt       go to state 138
    ElseIfStmt     go to state 139
    SwitchStmt     go to state 140
    StructStmt     go to state 22
    ClassStmt      go to state 23
    PrintFunc      go to state 141
    coutstatement  go to state 142
    cinstatement   go to state 143


State 182

   98 coutstatement: COUT COUTOP COUTSTR COUTOP . ENDL

    ENDL  shift, and go to state 201


State 183

   78 SwitchStmt: SWITCH '(' ID ')' . '{' InnerSwitchStmt '}'

    '{'  shift, and go to state 202


State 184

   87 ClassStmt: CLASS ID ':' ACCESS ID '{' ACCESS ':' start ACCESS ':' . start '}'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    CUSTOM  shift, and go to state 11
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14

    start         go to state 203
    Declaration   go to state 16
    Assignment    go to state 17
    FunctionCall  go to state 18
    ArrayUsage    go to state 19
    Function      go to state 20
    Type          go to state 21
    StructStmt    go to state 22
    ClassStmt     go to state 23


State 185

   90 Expr: Expr . LE Expr
   90     | Expr LE Expr .
   91     | Expr . GE Expr
   92     | Expr . NE Expr
   93     | Expr . EQ Expr
   94     | Expr . GT Expr
   95     | Expr . LT Expr

    $default  reduce using rule 90 (Expr)


State 186

   90 Expr: Expr . LE Expr
   91     | Expr . GE Expr
   91     | Expr GE Expr .
   92     | Expr . NE Expr
   93     | Expr . EQ Expr
   94     | Expr . GT Expr
   95     | Expr . LT Expr

    $default  reduce using rule 91 (Expr)


State 187

   90 Expr: Expr . LE Expr
   91     | Expr . GE Expr
   92     | Expr . NE Expr
   93     | Expr . EQ Expr
   93     | Expr EQ Expr .
   94     | Expr . GT Expr
   95     | Expr . LT Expr

    $default  reduce using rule 93 (Expr)


State 188

   90 Expr: Expr . LE Expr
   91     | Expr . GE Expr
   92     | Expr . NE Expr
   92     | Expr NE Expr .
   93     | Expr . EQ Expr
   94     | Expr . GT Expr
   95     | Expr . LT Expr

    $default  reduce using rule 92 (Expr)


State 189

   90 Expr: Expr . LE Expr
   91     | Expr . GE Expr
   92     | Expr . NE Expr
   93     | Expr . EQ Expr
   94     | Expr . GT Expr
   95     | Expr . LT Expr
   95     | Expr LT Expr .

    $default  reduce using rule 95 (Expr)


State 190

   90 Expr: Expr . LE Expr
   91     | Expr . GE Expr
   92     | Expr . NE Expr
   93     | Expr . EQ Expr
   94     | Expr . GT Expr
   94     | Expr GT Expr .
   95     | Expr . LT Expr

    $default  reduce using rule 94 (Expr)


State 191

   68 ForStmt: FOR '(' Expr ';' Expr . ';' Expr ')' Stmt
   69        | FOR '(' Expr ';' Expr . ';' Expr ')' CompoundStmt
   90 Expr: Expr . LE Expr
   91     | Expr . GE Expr
   92     | Expr . NE Expr
   93     | Expr . EQ Expr
   94     | Expr . GT Expr
   95     | Expr . LT Expr

    LE   shift, and go to state 170
    GE   shift, and go to state 171
    EQ   shift, and go to state 172
    NE   shift, and go to state 173
    LT   shift, and go to state 174
    GT   shift, and go to state 175
    ';'  shift, and go to state 204


State 192

   71 ForStmt: FOR '(' Expr ')' CompoundStmt .

    $default  reduce using rule 71 (ForStmt)


State 193

   70 ForStmt: FOR '(' Expr ')' Stmt .

    $default  reduce using rule 70 (ForStmt)


State 194

   67 WhileStmt: WHILE '(' Expr ')' CompoundStmt .

    $default  reduce using rule 67 (WhileStmt)


State 195

   66 WhileStmt: WHILE '(' Expr ')' Stmt .

    $default  reduce using rule 66 (WhileStmt)


State 196

   73 IfStmt: IF '(' Expr ')' CompoundStmt .

    $default  reduce using rule 73 (IfStmt)


State 197

   72 IfStmt: IF '(' Expr ')' Stmt .

    $default  reduce using rule 72 (IfStmt)


State 198

   88 PrintFunc: PRINTF '(' Expr ')' ';' .

    $default  reduce using rule 88 (PrintFunc)


State 199

   77 ElseIfStmt: ELSEIF '(' Expr ')' CompoundStmt .

    $default  reduce using rule 77 (ElseIfStmt)


State 200

   76 ElseIfStmt: ELSEIF '(' Expr ')' Stmt .

    $default  reduce using rule 76 (ElseIfStmt)


State 201

   98 coutstatement: COUT COUTOP COUTSTR COUTOP ENDL .

    $default  reduce using rule 98 (coutstatement)


State 202

   78 SwitchStmt: SWITCH '(' ID ')' '{' . InnerSwitchStmt '}'

    BREAK  shift, and go to state 205
    CASE   shift, and go to state 206

    InnerSwitchStmt  go to state 207
    SwitchCaseStmt   go to state 208


State 203

    3 start: start . Function
    4      | start . Declaration
   87 ClassStmt: CLASS ID ':' ACCESS ID '{' ACCESS ':' start ACCESS ':' start . '}'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    CUSTOM  shift, and go to state 11
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14
    '}'     shift, and go to state 209

    Declaration   go to state 48
    Assignment    go to state 17
    FunctionCall  go to state 18
    ArrayUsage    go to state 19
    Function      go to state 49
    Type          go to state 21
    StructStmt    go to state 22
    ClassStmt     go to state 23


State 204

   68 ForStmt: FOR '(' Expr ';' Expr ';' . Expr ')' Stmt
   69        | FOR '(' Expr ';' Expr ';' . Expr ')' CompoundStmt

    NUM   shift, and go to state 9
    ID    shift, and go to state 43
    '-'   shift, and go to state 12
    '\''  shift, and go to state 13
    '('   shift, and go to state 14

    $default  reduce using rule 89 (Expr)

    Assignment  go to state 158
    ArrayUsage  go to state 159
    Expr        go to state 210


State 205

   83 SwitchCaseStmt: BREAK . ';'

    ';'  shift, and go to state 211


State 206

   82 SwitchCaseStmt: CASE . NUM ':' Stmt

    NUM  shift, and go to state 212


State 207

   78 SwitchStmt: SWITCH '(' ID ')' '{' InnerSwitchStmt . '}'

    '}'  shift, and go to state 213


State 208

   79 InnerSwitchStmt: SwitchCaseStmt .
   80                | SwitchCaseStmt . DefaultSwitchStmt
   81 SwitchCaseStmt: SwitchCaseStmt . SwitchCaseStmt

    BREAK    shift, and go to state 205
    DEFAULT  shift, and go to state 214
    CASE     shift, and go to state 206

    $default  reduce using rule 79 (InnerSwitchStmt)

    SwitchCaseStmt     go to state 215
    DefaultSwitchStmt  go to state 216


State 209

   87 ClassStmt: CLASS ID ':' ACCESS ID '{' ACCESS ':' start ACCESS ':' start '}' .

    $default  reduce using rule 87 (ClassStmt)


State 210

   68 ForStmt: FOR '(' Expr ';' Expr ';' Expr . ')' Stmt
   69        | FOR '(' Expr ';' Expr ';' Expr . ')' CompoundStmt
   90 Expr: Expr . LE Expr
   91     | Expr . GE Expr
   92     | Expr . NE Expr
   93     | Expr . EQ Expr
   94     | Expr . GT Expr
   95     | Expr . LT Expr

    LE   shift, and go to state 170
    GE   shift, and go to state 171
    EQ   shift, and go to state 172
    NE   shift, and go to state 173
    LT   shift, and go to state 174
    GT   shift, and go to state 175
    ')'  shift, and go to state 217


State 211

   83 SwitchCaseStmt: BREAK ';' .

    $default  reduce using rule 83 (SwitchCaseStmt)


State 212

   82 SwitchCaseStmt: CASE NUM . ':' Stmt

    ':'  shift, and go to state 218


State 213

   78 SwitchStmt: SWITCH '(' ID ')' '{' InnerSwitchStmt '}' .

    $default  reduce using rule 78 (SwitchStmt)


State 214

   84 DefaultSwitchStmt: DEFAULT . ':' Stmt BREAK ';'

    ':'  shift, and go to state 219


State 215

   81 SwitchCaseStmt: SwitchCaseStmt . SwitchCaseStmt
   81               | SwitchCaseStmt SwitchCaseStmt .

    BREAK  shift, and go to state 205
    CASE   shift, and go to state 206

    BREAK     [reduce using rule 81 (SwitchCaseStmt)]
    CASE      [reduce using rule 81 (SwitchCaseStmt)]
    $default  reduce using rule 81 (SwitchCaseStmt)

    SwitchCaseStmt  go to state 215


State 216

   80 InnerSwitchStmt: SwitchCaseStmt DefaultSwitchStmt .

    $default  reduce using rule 80 (InnerSwitchStmt)


State 217

   68 ForStmt: FOR '(' Expr ';' Expr ';' Expr ')' . Stmt
   69        | FOR '(' Expr ';' Expr ';' Expr ')' . CompoundStmt

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    FOR     shift, and go to state 122
    WHILE   shift, and go to state 123
    IF      shift, and go to state 124
    ELSE    shift, and go to state 125
    PRINTF  shift, and go to state 126
    ELSEIF  shift, and go to state 127
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    COUT    shift, and go to state 128
    CIN     shift, and go to state 129
    CUSTOM  shift, and go to state 11
    SWITCH  shift, and go to state 130
    ';'     shift, and go to state 131
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14
    '{'     shift, and go to state 113

    Declaration    go to state 133
    Assignment     go to state 17
    FunctionCall   go to state 18
    ArrayUsage     go to state 19
    CompoundStmt   go to state 220
    Stmt           go to state 221
    Type           go to state 91
    WhileStmt      go to state 135
    ForStmt        go to state 136
    IfStmt         go to state 137
    ElseStmt       go to state 138
    ElseIfStmt     go to state 139
    SwitchStmt     go to state 140
    StructStmt     go to state 22
    ClassStmt      go to state 23
    PrintFunc      go to state 141
    coutstatement  go to state 142
    cinstatement   go to state 143


State 218

   82 SwitchCaseStmt: CASE NUM ':' . Stmt

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    FOR     shift, and go to state 122
    WHILE   shift, and go to state 123
    IF      shift, and go to state 124
    ELSE    shift, and go to state 125
    PRINTF  shift, and go to state 126
    ELSEIF  shift, and go to state 127
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    COUT    shift, and go to state 128
    CIN     shift, and go to state 129
    CUSTOM  shift, and go to state 11
    SWITCH  shift, and go to state 130
    ';'     shift, and go to state 131
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14

    Declaration    go to state 133
    Assignment     go to state 17
    FunctionCall   go to state 18
    ArrayUsage     go to state 19
    Stmt           go to state 222
    Type           go to state 91
    WhileStmt      go to state 135
    ForStmt        go to state 136
    IfStmt         go to state 137
    ElseStmt       go to state 138
    ElseIfStmt     go to state 139
    SwitchStmt     go to state 140
    StructStmt     go to state 22
    ClassStmt      go to state 23
    PrintFunc      go to state 141
    coutstatement  go to state 142
    cinstatement   go to state 143


State 219

   84 DefaultSwitchStmt: DEFAULT ':' . Stmt BREAK ';'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6
    FOR     shift, and go to state 122
    WHILE   shift, and go to state 123
    IF      shift, and go to state 124
    ELSE    shift, and go to state 125
    PRINTF  shift, and go to state 126
    ELSEIF  shift, and go to state 127
    STRUCT  shift, and go to state 7
    CLASS   shift, and go to state 8
    NUM     shift, and go to state 9
    ID      shift, and go to state 10
    COUT    shift, and go to state 128
    CIN     shift, and go to state 129
    CUSTOM  shift, and go to state 11
    SWITCH  shift, and go to state 130
    ';'     shift, and go to state 131
    '-'     shift, and go to state 12
    '\''    shift, and go to state 13
    '('     shift, and go to state 14

    Declaration    go to state 133
    Assignment     go to state 17
    FunctionCall   go to state 18
    ArrayUsage     go to state 19
    Stmt           go to state 223
    Type           go to state 91
    WhileStmt      go to state 135
    ForStmt        go to state 136
    IfStmt         go to state 137
    ElseStmt       go to state 138
    ElseIfStmt     go to state 139
    SwitchStmt     go to state 140
    StructStmt     go to state 22
    ClassStmt      go to state 23
    PrintFunc      go to state 141
    coutstatement  go to state 142
    cinstatement   go to state 143


State 220

   69 ForStmt: FOR '(' Expr ';' Expr ';' Expr ')' CompoundStmt .

    $default  reduce using rule 69 (ForStmt)


State 221

   68 ForStmt: FOR '(' Expr ';' Expr ';' Expr ')' Stmt .

    $default  reduce using rule 68 (ForStmt)


State 222

   82 SwitchCaseStmt: CASE NUM ':' Stmt .

    $default  reduce using rule 82 (SwitchCaseStmt)


State 223

   84 DefaultSwitchStmt: DEFAULT ':' Stmt . BREAK ';'

    BREAK  shift, and go to state 224


State 224

   84 DefaultSwitchStmt: DEFAULT ':' Stmt BREAK . ';'

    ';'  shift, and go to state 225


State 225

   84 DefaultSwitchStmt: DEFAULT ':' Stmt BREAK ';' .

    $default  reduce using rule 84 (DefaultSwitchStmt)
