Terminals unused in grammar

    T_keyword
    T_array
    T_comma
    T_dot
    T_bool
    T_bool_true
    T_bool_false


Grammar

    0 $accept: S $end

    1 S: Start

    2 Start: T_include Start
    3      | T_include T_namespace Start
    4      | Main

    5 Main: T_type T_main T_openParenthesis T_closedParanthesis Body

    6 Body: T_openFlowerBracket C T_closedFlowerBracket

    7 C: C statement T_Semicolon
    8  | C LOOPS
    9  | statement T_Semicolon
   10  | LOOPS
   11  | T_openFlowerBracket C T_closedFlowerBracket

   12 LOOPS: T_if T_openParenthesis COND T_closedParanthesis LOOPBODY ELSECHAIN
   13      | T_switch T_openParenthesis COND T_closedParanthesis SWITCHBODY

   14 ELSECHAIN: T_else T_if T_openParenthesis COND T_closedParanthesis LOOPBODY ELSECHAIN
   15          | T_else LOOPBODY
   16          | %empty

   17 LOOPBODY: T_openFlowerBracket C T_closedFlowerBracket
   18         | T_Semicolon
   19         | statement T_Semicolon

   20 SWITCHBODY: T_openFlowerBracket CASES T_closedFlowerBracket
   21           | T_Semicolon
   22           | statement T_Semicolon

   23 CASES: T_case CASEVAL
   24      | T_Semicolon
   25      | statement T_Semicolon
   26      | T_default T_colon DEFCASEC
   27      | %empty

   28 statement: ASSIGN_EXPR
   29          | ARITH_EXPR
   30          | PRINT
   31          | INPUT
   32          | T_break

   33 COND: LIT RELOP LIT
   34     | LIT
   35     | LIT RELOP LIT bin_boolop LIT RELOP LIT
   36     | un_boolop T_openParenthesis LIT RELOP LIT T_closedParanthesis
   37     | un_boolop LIT RELOP LIT
   38     | LIT bin_boolop LIT
   39     | un_boolop T_openParenthesis LIT T_closedParanthesis
   40     | un_boolop LIT

   41 ASSIGN_EXPR: T_identifier T_AssignmentOperator ARITH_EXPR
   42            | T_type T_identifier T_AssignmentOperator ARITH_EXPR

   43 ARITH_EXPR: LIT
   44           | LIT bin_arop ARITH_EXPR
   45           | LIT bin_boolop ARITH_EXPR
   46           | LIT un_arop
   47           | un_arop ARITH_EXPR
   48           | un_boolop ARITH_EXPR

   49 PRINT: T_cout T_OutputStream T_stringLiteral
   50      | T_cout T_OutputStream T_stringLiteral T_OutputStream T_endl

   51 INPUT: T_cin INPUTS

   52 INPUTS: T_InputStream T_identifier INPUTS
   53       | T_InputStream T_identifier

   54 CASEVAL: LIT T_colon CASEC

   55 CASEC: C
   56      | T_case CASEVAL
   57      | C T_case CASEVAL
   58      | T_default T_colon DEFCASEC
   59      | C T_default T_colon DEFCASEC

   60 DEFCASEVAL: LIT T_colon DEFCASEC

   61 DEFCASEC: C
   62         | T_case DEFCASEVAL
   63         | C T_case DEFCASEVAL

   64 LIT: T_identifier
   65    | T_numericConstants
   66    | T_intVal
   67    | T_floatVal
   68    | T_doubleVal
   69    | T_longVal
   70    | T_stringLiteral
   71    | T_character

   72 RELOP: T_less
   73      | T_greater
   74      | T_less_equal
   75      | T_greater_equal
   76      | T_not_equal
   77      | T_equal_equal

   78 bin_arop: T_plus
   79         | T_minus
   80         | T_multiply
   81         | T_divide
   82         | T_mod

   83 bin_boolop: T_LogicalAnd
   84           | T_LogicalOr

   85 un_arop: T_incr
   86        | T_decr

   87 un_boolop: T_LogicalNot


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_keyword <s> (258)
    T_main <s> (259) 5
    T_type <s> (260) 5 42
    T_if <s> (261) 12 14
    T_else <s> (262) 14 15
    T_InputStream <s> (263) 52 53
    T_OutputStream <s> (264) 49 50
    T_cout <s> (265) 49 50
    T_endl <s> (266) 50
    T_cin <s> (267) 51
    T_openParenthesis <s> (268) 5 12 13 14 36 39
    T_closedParanthesis <s> (269) 5 12 13 14 36 39
    T_openFlowerBracket <s> (270) 6 11 17 20
    T_closedFlowerBracket <s> (271) 6 11 17 20
    T_AssignmentOperator <s> (272) 41 42
    T_Semicolon <s> (273) 7 9 18 19 21 22 24 25
    T_identifier <s> (274) 41 42 52 53 64
    T_numericConstants <s> (275) 65
    T_stringLiteral <s> (276) 49 50 70
    T_character <s> (277) 71
    T_plus <s> (278) 78
    T_minus <s> (279) 79
    T_mod <s> (280) 82
    T_divide <s> (281) 81
    T_multiply <s> (282) 80
    T_incr <s> (283) 85
    T_decr <s> (284) 86
    T_switch <s> (285) 13
    T_case <s> (286) 23 56 57 62 63
    T_break <s> (287) 32
    T_default <s> (288) 26 58 59
    T_namespace <s> (289) 3
    T_array <s> (290)
    T_include <s> (291) 2 3
    T_comma <s> (292)
    T_dot <s> (293)
    T_colon <s> (294) 26 54 58 59 60
    T_intVal <s> (295) 66
    T_longVal <s> (296) 69
    T_doubleVal <s> (297) 68
    T_floatVal <s> (298) 67
    T_bool <s> (299)
    T_bool_true <s> (300)
    T_bool_false <s> (301)
    T_LogicalAnd (302) 83
    T_LogicalOr (303) 84
    T_LogicalNot (304) 87
    T_less (305) 72
    T_less_equal (306) 74
    T_greater (307) 73
    T_greater_equal (308) 75
    T_equal_equal (309) 77
    T_not_equal (310) 76


Nonterminals, with rules where they appear

    $accept (56)
        on left: 0
    S (57)
        on left: 1
        on right: 0
    Start (58)
        on left: 2 3 4
        on right: 1 2 3
    Main (59)
        on left: 5
        on right: 4
    Body (60)
        on left: 6
        on right: 5
    C (61)
        on left: 7 8 9 10 11
        on right: 6 7 8 11 17 55 57 59 61 63
    LOOPS (62)
        on left: 12 13
        on right: 8 10
    ELSECHAIN (63)
        on left: 14 15 16
        on right: 12 14
    LOOPBODY (64)
        on left: 17 18 19
        on right: 12 14 15
    SWITCHBODY (65)
        on left: 20 21 22
        on right: 13
    CASES (66)
        on left: 23 24 25 26 27
        on right: 20
    statement (67)
        on left: 28 29 30 31 32
        on right: 7 9 19 22 25
    COND (68)
        on left: 33 34 35 36 37 38 39 40
        on right: 12 13 14
    ASSIGN_EXPR (69)
        on left: 41 42
        on right: 28
    ARITH_EXPR (70)
        on left: 43 44 45 46 47 48
        on right: 29 41 42 44 45 47 48
    PRINT (71)
        on left: 49 50
        on right: 30
    INPUT (72)
        on left: 51
        on right: 31
    INPUTS (73)
        on left: 52 53
        on right: 51 52
    CASEVAL (74)
        on left: 54
        on right: 23 56 57
    CASEC (75)
        on left: 55 56 57 58 59
        on right: 54
    DEFCASEVAL (76)
        on left: 60
        on right: 62 63
    DEFCASEC (77)
        on left: 61 62 63
        on right: 26 58 59 60
    LIT (78)
        on left: 64 65 66 67 68 69 70 71
        on right: 33 34 35 36 37 38 39 40 43 44 45 46 54 60
    RELOP (79)
        on left: 72 73 74 75 76 77
        on right: 33 35 36 37
    bin_arop (80)
        on left: 78 79 80 81 82
        on right: 44
    bin_boolop (81)
        on left: 83 84
        on right: 35 38 45
    un_arop (82)
        on left: 85 86
        on right: 46 47
    un_boolop (83)
        on left: 87
        on right: 36 37 39 40 48


State 0

    0 $accept: • S $end

    T_type     shift, and go to state 1
    T_include  shift, and go to state 2

    S      go to state 3
    Start  go to state 4
    Main   go to state 5


State 1

    5 Main: T_type • T_main T_openParenthesis T_closedParanthesis Body

    T_main  shift, and go to state 6


State 2

    2 Start: T_include • Start
    3      | T_include • T_namespace Start

    T_type       shift, and go to state 1
    T_namespace  shift, and go to state 7
    T_include    shift, and go to state 2

    Start  go to state 8
    Main   go to state 5


State 3

    0 $accept: S • $end

    $end  shift, and go to state 9


State 4

    1 S: Start •

    $default  reduce using rule 1 (S)


State 5

    4 Start: Main •

    $default  reduce using rule 4 (Start)


State 6

    5 Main: T_type T_main • T_openParenthesis T_closedParanthesis Body

    T_openParenthesis  shift, and go to state 10


State 7

    3 Start: T_include T_namespace • Start

    T_type     shift, and go to state 1
    T_include  shift, and go to state 2

    Start  go to state 11
    Main   go to state 5


State 8

    2 Start: T_include Start •

    $default  reduce using rule 2 (Start)


State 9

    0 $accept: S $end •

    $default  accept


State 10

    5 Main: T_type T_main T_openParenthesis • T_closedParanthesis Body

    T_closedParanthesis  shift, and go to state 12


State 11

    3 Start: T_include T_namespace Start •

    $default  reduce using rule 3 (Start)


State 12

    5 Main: T_type T_main T_openParenthesis T_closedParanthesis • Body

    T_openFlowerBracket  shift, and go to state 13

    Body  go to state 14


State 13

    6 Body: T_openFlowerBracket • C T_closedFlowerBracket

    T_type               shift, and go to state 15
    T_if                 shift, and go to state 16
    T_cout               shift, and go to state 17
    T_cin                shift, and go to state 18
    T_openFlowerBracket  shift, and go to state 19
    T_identifier         shift, and go to state 20
    T_numericConstants   shift, and go to state 21
    T_stringLiteral      shift, and go to state 22
    T_character          shift, and go to state 23
    T_incr               shift, and go to state 24
    T_decr               shift, and go to state 25
    T_switch             shift, and go to state 26
    T_break              shift, and go to state 27
    T_intVal             shift, and go to state 28
    T_longVal            shift, and go to state 29
    T_doubleVal          shift, and go to state 30
    T_floatVal           shift, and go to state 31
    T_LogicalNot         shift, and go to state 32

    C            go to state 33
    LOOPS        go to state 34
    statement    go to state 35
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 14

    5 Main: T_type T_main T_openParenthesis T_closedParanthesis Body •

    $default  reduce using rule 5 (Main)


State 15

   42 ASSIGN_EXPR: T_type • T_identifier T_AssignmentOperator ARITH_EXPR

    T_identifier  shift, and go to state 43


State 16

   12 LOOPS: T_if • T_openParenthesis COND T_closedParanthesis LOOPBODY ELSECHAIN

    T_openParenthesis  shift, and go to state 44


State 17

   49 PRINT: T_cout • T_OutputStream T_stringLiteral
   50      | T_cout • T_OutputStream T_stringLiteral T_OutputStream T_endl

    T_OutputStream  shift, and go to state 45


State 18

   51 INPUT: T_cin • INPUTS

    T_InputStream  shift, and go to state 46

    INPUTS  go to state 47


State 19

   11 C: T_openFlowerBracket • C T_closedFlowerBracket

    T_type               shift, and go to state 15
    T_if                 shift, and go to state 16
    T_cout               shift, and go to state 17
    T_cin                shift, and go to state 18
    T_openFlowerBracket  shift, and go to state 19
    T_identifier         shift, and go to state 20
    T_numericConstants   shift, and go to state 21
    T_stringLiteral      shift, and go to state 22
    T_character          shift, and go to state 23
    T_incr               shift, and go to state 24
    T_decr               shift, and go to state 25
    T_switch             shift, and go to state 26
    T_break              shift, and go to state 27
    T_intVal             shift, and go to state 28
    T_longVal            shift, and go to state 29
    T_doubleVal          shift, and go to state 30
    T_floatVal           shift, and go to state 31
    T_LogicalNot         shift, and go to state 32

    C            go to state 48
    LOOPS        go to state 34
    statement    go to state 35
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 20

   41 ASSIGN_EXPR: T_identifier • T_AssignmentOperator ARITH_EXPR
   64 LIT: T_identifier •

    T_AssignmentOperator  shift, and go to state 49

    $default  reduce using rule 64 (LIT)


State 21

   65 LIT: T_numericConstants •

    $default  reduce using rule 65 (LIT)


State 22

   70 LIT: T_stringLiteral •

    $default  reduce using rule 70 (LIT)


State 23

   71 LIT: T_character •

    $default  reduce using rule 71 (LIT)


State 24

   85 un_arop: T_incr •

    $default  reduce using rule 85 (un_arop)


State 25

   86 un_arop: T_decr •

    $default  reduce using rule 86 (un_arop)


State 26

   13 LOOPS: T_switch • T_openParenthesis COND T_closedParanthesis SWITCHBODY

    T_openParenthesis  shift, and go to state 50


State 27

   32 statement: T_break •

    $default  reduce using rule 32 (statement)


State 28

   66 LIT: T_intVal •

    $default  reduce using rule 66 (LIT)


State 29

   69 LIT: T_longVal •

    $default  reduce using rule 69 (LIT)


State 30

   68 LIT: T_doubleVal •

    $default  reduce using rule 68 (LIT)


State 31

   67 LIT: T_floatVal •

    $default  reduce using rule 67 (LIT)


State 32

   87 un_boolop: T_LogicalNot •

    $default  reduce using rule 87 (un_boolop)


State 33

    6 Body: T_openFlowerBracket C • T_closedFlowerBracket
    7 C: C • statement T_Semicolon
    8  | C • LOOPS

    T_type                 shift, and go to state 15
    T_if                   shift, and go to state 16
    T_cout                 shift, and go to state 17
    T_cin                  shift, and go to state 18
    T_closedFlowerBracket  shift, and go to state 51
    T_identifier           shift, and go to state 20
    T_numericConstants     shift, and go to state 21
    T_stringLiteral        shift, and go to state 22
    T_character            shift, and go to state 23
    T_incr                 shift, and go to state 24
    T_decr                 shift, and go to state 25
    T_switch               shift, and go to state 26
    T_break                shift, and go to state 27
    T_intVal               shift, and go to state 28
    T_longVal              shift, and go to state 29
    T_doubleVal            shift, and go to state 30
    T_floatVal             shift, and go to state 31
    T_LogicalNot           shift, and go to state 32

    LOOPS        go to state 52
    statement    go to state 53
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 34

   10 C: LOOPS •

    $default  reduce using rule 10 (C)


State 35

    9 C: statement • T_Semicolon

    T_Semicolon  shift, and go to state 54


State 36

   28 statement: ASSIGN_EXPR •

    $default  reduce using rule 28 (statement)


State 37

   29 statement: ARITH_EXPR •

    $default  reduce using rule 29 (statement)


State 38

   30 statement: PRINT •

    $default  reduce using rule 30 (statement)


State 39

   31 statement: INPUT •

    $default  reduce using rule 31 (statement)


State 40

   43 ARITH_EXPR: LIT •
   44           | LIT • bin_arop ARITH_EXPR
   45           | LIT • bin_boolop ARITH_EXPR
   46           | LIT • un_arop

    T_plus        shift, and go to state 55
    T_minus       shift, and go to state 56
    T_mod         shift, and go to state 57
    T_divide      shift, and go to state 58
    T_multiply    shift, and go to state 59
    T_incr        shift, and go to state 24
    T_decr        shift, and go to state 25
    T_LogicalAnd  shift, and go to state 60
    T_LogicalOr   shift, and go to state 61

    $default  reduce using rule 43 (ARITH_EXPR)

    bin_arop    go to state 62
    bin_boolop  go to state 63
    un_arop     go to state 64


State 41

   47 ARITH_EXPR: un_arop • ARITH_EXPR

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_incr              shift, and go to state 24
    T_decr              shift, and go to state 25
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31
    T_LogicalNot        shift, and go to state 32

    ARITH_EXPR  go to state 66
    LIT         go to state 40
    un_arop     go to state 41
    un_boolop   go to state 42


State 42

   48 ARITH_EXPR: un_boolop • ARITH_EXPR

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_incr              shift, and go to state 24
    T_decr              shift, and go to state 25
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31
    T_LogicalNot        shift, and go to state 32

    ARITH_EXPR  go to state 67
    LIT         go to state 40
    un_arop     go to state 41
    un_boolop   go to state 42


State 43

   42 ASSIGN_EXPR: T_type T_identifier • T_AssignmentOperator ARITH_EXPR

    T_AssignmentOperator  shift, and go to state 68


State 44

   12 LOOPS: T_if T_openParenthesis • COND T_closedParanthesis LOOPBODY ELSECHAIN

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31
    T_LogicalNot        shift, and go to state 32

    COND       go to state 69
    LIT        go to state 70
    un_boolop  go to state 71


State 45

   49 PRINT: T_cout T_OutputStream • T_stringLiteral
   50      | T_cout T_OutputStream • T_stringLiteral T_OutputStream T_endl

    T_stringLiteral  shift, and go to state 72


State 46

   52 INPUTS: T_InputStream • T_identifier INPUTS
   53       | T_InputStream • T_identifier

    T_identifier  shift, and go to state 73


State 47

   51 INPUT: T_cin INPUTS •

    $default  reduce using rule 51 (INPUT)


State 48

    7 C: C • statement T_Semicolon
    8  | C • LOOPS
   11  | T_openFlowerBracket C • T_closedFlowerBracket

    T_type                 shift, and go to state 15
    T_if                   shift, and go to state 16
    T_cout                 shift, and go to state 17
    T_cin                  shift, and go to state 18
    T_closedFlowerBracket  shift, and go to state 74
    T_identifier           shift, and go to state 20
    T_numericConstants     shift, and go to state 21
    T_stringLiteral        shift, and go to state 22
    T_character            shift, and go to state 23
    T_incr                 shift, and go to state 24
    T_decr                 shift, and go to state 25
    T_switch               shift, and go to state 26
    T_break                shift, and go to state 27
    T_intVal               shift, and go to state 28
    T_longVal              shift, and go to state 29
    T_doubleVal            shift, and go to state 30
    T_floatVal             shift, and go to state 31
    T_LogicalNot           shift, and go to state 32

    LOOPS        go to state 52
    statement    go to state 53
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 49

   41 ASSIGN_EXPR: T_identifier T_AssignmentOperator • ARITH_EXPR

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_incr              shift, and go to state 24
    T_decr              shift, and go to state 25
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31
    T_LogicalNot        shift, and go to state 32

    ARITH_EXPR  go to state 75
    LIT         go to state 40
    un_arop     go to state 41
    un_boolop   go to state 42


State 50

   13 LOOPS: T_switch T_openParenthesis • COND T_closedParanthesis SWITCHBODY

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31
    T_LogicalNot        shift, and go to state 32

    COND       go to state 76
    LIT        go to state 70
    un_boolop  go to state 71


State 51

    6 Body: T_openFlowerBracket C T_closedFlowerBracket •

    $default  reduce using rule 6 (Body)


State 52

    8 C: C LOOPS •

    $default  reduce using rule 8 (C)


State 53

    7 C: C statement • T_Semicolon

    T_Semicolon  shift, and go to state 77


State 54

    9 C: statement T_Semicolon •

    $default  reduce using rule 9 (C)


State 55

   78 bin_arop: T_plus •

    $default  reduce using rule 78 (bin_arop)


State 56

   79 bin_arop: T_minus •

    $default  reduce using rule 79 (bin_arop)


State 57

   82 bin_arop: T_mod •

    $default  reduce using rule 82 (bin_arop)


State 58

   81 bin_arop: T_divide •

    $default  reduce using rule 81 (bin_arop)


State 59

   80 bin_arop: T_multiply •

    $default  reduce using rule 80 (bin_arop)


State 60

   83 bin_boolop: T_LogicalAnd •

    $default  reduce using rule 83 (bin_boolop)


State 61

   84 bin_boolop: T_LogicalOr •

    $default  reduce using rule 84 (bin_boolop)


State 62

   44 ARITH_EXPR: LIT bin_arop • ARITH_EXPR

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_incr              shift, and go to state 24
    T_decr              shift, and go to state 25
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31
    T_LogicalNot        shift, and go to state 32

    ARITH_EXPR  go to state 78
    LIT         go to state 40
    un_arop     go to state 41
    un_boolop   go to state 42


State 63

   45 ARITH_EXPR: LIT bin_boolop • ARITH_EXPR

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_incr              shift, and go to state 24
    T_decr              shift, and go to state 25
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31
    T_LogicalNot        shift, and go to state 32

    ARITH_EXPR  go to state 79
    LIT         go to state 40
    un_arop     go to state 41
    un_boolop   go to state 42


State 64

   46 ARITH_EXPR: LIT un_arop •

    $default  reduce using rule 46 (ARITH_EXPR)


State 65

   64 LIT: T_identifier •

    $default  reduce using rule 64 (LIT)


State 66

   47 ARITH_EXPR: un_arop ARITH_EXPR •

    $default  reduce using rule 47 (ARITH_EXPR)


State 67

   48 ARITH_EXPR: un_boolop ARITH_EXPR •

    $default  reduce using rule 48 (ARITH_EXPR)


State 68

   42 ASSIGN_EXPR: T_type T_identifier T_AssignmentOperator • ARITH_EXPR

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_incr              shift, and go to state 24
    T_decr              shift, and go to state 25
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31
    T_LogicalNot        shift, and go to state 32

    ARITH_EXPR  go to state 80
    LIT         go to state 40
    un_arop     go to state 41
    un_boolop   go to state 42


State 69

   12 LOOPS: T_if T_openParenthesis COND • T_closedParanthesis LOOPBODY ELSECHAIN

    T_closedParanthesis  shift, and go to state 81


State 70

   33 COND: LIT • RELOP LIT
   34     | LIT •
   35     | LIT • RELOP LIT bin_boolop LIT RELOP LIT
   38     | LIT • bin_boolop LIT

    T_LogicalAnd     shift, and go to state 60
    T_LogicalOr      shift, and go to state 61
    T_less           shift, and go to state 82
    T_less_equal     shift, and go to state 83
    T_greater        shift, and go to state 84
    T_greater_equal  shift, and go to state 85
    T_equal_equal    shift, and go to state 86
    T_not_equal      shift, and go to state 87

    $default  reduce using rule 34 (COND)

    RELOP       go to state 88
    bin_boolop  go to state 89


State 71

   36 COND: un_boolop • T_openParenthesis LIT RELOP LIT T_closedParanthesis
   37     | un_boolop • LIT RELOP LIT
   39     | un_boolop • T_openParenthesis LIT T_closedParanthesis
   40     | un_boolop • LIT

    T_openParenthesis   shift, and go to state 90
    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    LIT  go to state 91


State 72

   49 PRINT: T_cout T_OutputStream T_stringLiteral •
   50      | T_cout T_OutputStream T_stringLiteral • T_OutputStream T_endl

    T_OutputStream  shift, and go to state 92

    $default  reduce using rule 49 (PRINT)


State 73

   52 INPUTS: T_InputStream T_identifier • INPUTS
   53       | T_InputStream T_identifier •

    T_InputStream  shift, and go to state 46

    $default  reduce using rule 53 (INPUTS)

    INPUTS  go to state 93


State 74

   11 C: T_openFlowerBracket C T_closedFlowerBracket •

    $default  reduce using rule 11 (C)


State 75

   41 ASSIGN_EXPR: T_identifier T_AssignmentOperator ARITH_EXPR •

    $default  reduce using rule 41 (ASSIGN_EXPR)


State 76

   13 LOOPS: T_switch T_openParenthesis COND • T_closedParanthesis SWITCHBODY

    T_closedParanthesis  shift, and go to state 94


State 77

    7 C: C statement T_Semicolon •

    $default  reduce using rule 7 (C)


State 78

   44 ARITH_EXPR: LIT bin_arop ARITH_EXPR •

    $default  reduce using rule 44 (ARITH_EXPR)


State 79

   45 ARITH_EXPR: LIT bin_boolop ARITH_EXPR •

    $default  reduce using rule 45 (ARITH_EXPR)


State 80

   42 ASSIGN_EXPR: T_type T_identifier T_AssignmentOperator ARITH_EXPR •

    $default  reduce using rule 42 (ASSIGN_EXPR)


State 81

   12 LOOPS: T_if T_openParenthesis COND T_closedParanthesis • LOOPBODY ELSECHAIN

    T_type               shift, and go to state 15
    T_cout               shift, and go to state 17
    T_cin                shift, and go to state 18
    T_openFlowerBracket  shift, and go to state 95
    T_Semicolon          shift, and go to state 96
    T_identifier         shift, and go to state 20
    T_numericConstants   shift, and go to state 21
    T_stringLiteral      shift, and go to state 22
    T_character          shift, and go to state 23
    T_incr               shift, and go to state 24
    T_decr               shift, and go to state 25
    T_break              shift, and go to state 27
    T_intVal             shift, and go to state 28
    T_longVal            shift, and go to state 29
    T_doubleVal          shift, and go to state 30
    T_floatVal           shift, and go to state 31
    T_LogicalNot         shift, and go to state 32

    LOOPBODY     go to state 97
    statement    go to state 98
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 82

   72 RELOP: T_less •

    $default  reduce using rule 72 (RELOP)


State 83

   74 RELOP: T_less_equal •

    $default  reduce using rule 74 (RELOP)


State 84

   73 RELOP: T_greater •

    $default  reduce using rule 73 (RELOP)


State 85

   75 RELOP: T_greater_equal •

    $default  reduce using rule 75 (RELOP)


State 86

   77 RELOP: T_equal_equal •

    $default  reduce using rule 77 (RELOP)


State 87

   76 RELOP: T_not_equal •

    $default  reduce using rule 76 (RELOP)


State 88

   33 COND: LIT RELOP • LIT
   35     | LIT RELOP • LIT bin_boolop LIT RELOP LIT

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    LIT  go to state 99


State 89

   38 COND: LIT bin_boolop • LIT

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    LIT  go to state 100


State 90

   36 COND: un_boolop T_openParenthesis • LIT RELOP LIT T_closedParanthesis
   39     | un_boolop T_openParenthesis • LIT T_closedParanthesis

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    LIT  go to state 101


State 91

   37 COND: un_boolop LIT • RELOP LIT
   40     | un_boolop LIT •

    T_less           shift, and go to state 82
    T_less_equal     shift, and go to state 83
    T_greater        shift, and go to state 84
    T_greater_equal  shift, and go to state 85
    T_equal_equal    shift, and go to state 86
    T_not_equal      shift, and go to state 87

    $default  reduce using rule 40 (COND)

    RELOP  go to state 102


State 92

   50 PRINT: T_cout T_OutputStream T_stringLiteral T_OutputStream • T_endl

    T_endl  shift, and go to state 103


State 93

   52 INPUTS: T_InputStream T_identifier INPUTS •

    $default  reduce using rule 52 (INPUTS)


State 94

   13 LOOPS: T_switch T_openParenthesis COND T_closedParanthesis • SWITCHBODY

    T_type               shift, and go to state 15
    T_cout               shift, and go to state 17
    T_cin                shift, and go to state 18
    T_openFlowerBracket  shift, and go to state 104
    T_Semicolon          shift, and go to state 105
    T_identifier         shift, and go to state 20
    T_numericConstants   shift, and go to state 21
    T_stringLiteral      shift, and go to state 22
    T_character          shift, and go to state 23
    T_incr               shift, and go to state 24
    T_decr               shift, and go to state 25
    T_break              shift, and go to state 27
    T_intVal             shift, and go to state 28
    T_longVal            shift, and go to state 29
    T_doubleVal          shift, and go to state 30
    T_floatVal           shift, and go to state 31
    T_LogicalNot         shift, and go to state 32

    SWITCHBODY   go to state 106
    statement    go to state 107
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 95

   17 LOOPBODY: T_openFlowerBracket • C T_closedFlowerBracket

    T_type               shift, and go to state 15
    T_if                 shift, and go to state 16
    T_cout               shift, and go to state 17
    T_cin                shift, and go to state 18
    T_openFlowerBracket  shift, and go to state 19
    T_identifier         shift, and go to state 20
    T_numericConstants   shift, and go to state 21
    T_stringLiteral      shift, and go to state 22
    T_character          shift, and go to state 23
    T_incr               shift, and go to state 24
    T_decr               shift, and go to state 25
    T_switch             shift, and go to state 26
    T_break              shift, and go to state 27
    T_intVal             shift, and go to state 28
    T_longVal            shift, and go to state 29
    T_doubleVal          shift, and go to state 30
    T_floatVal           shift, and go to state 31
    T_LogicalNot         shift, and go to state 32

    C            go to state 108
    LOOPS        go to state 34
    statement    go to state 35
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 96

   18 LOOPBODY: T_Semicolon •

    $default  reduce using rule 18 (LOOPBODY)


State 97

   12 LOOPS: T_if T_openParenthesis COND T_closedParanthesis LOOPBODY • ELSECHAIN

    T_else  shift, and go to state 109

    $default  reduce using rule 16 (ELSECHAIN)

    ELSECHAIN  go to state 110


State 98

   19 LOOPBODY: statement • T_Semicolon

    T_Semicolon  shift, and go to state 111


State 99

   33 COND: LIT RELOP LIT •
   35     | LIT RELOP LIT • bin_boolop LIT RELOP LIT

    T_LogicalAnd  shift, and go to state 60
    T_LogicalOr   shift, and go to state 61

    $default  reduce using rule 33 (COND)

    bin_boolop  go to state 112


State 100

   38 COND: LIT bin_boolop LIT •

    $default  reduce using rule 38 (COND)


State 101

   36 COND: un_boolop T_openParenthesis LIT • RELOP LIT T_closedParanthesis
   39     | un_boolop T_openParenthesis LIT • T_closedParanthesis

    T_closedParanthesis  shift, and go to state 113
    T_less               shift, and go to state 82
    T_less_equal         shift, and go to state 83
    T_greater            shift, and go to state 84
    T_greater_equal      shift, and go to state 85
    T_equal_equal        shift, and go to state 86
    T_not_equal          shift, and go to state 87

    RELOP  go to state 114


State 102

   37 COND: un_boolop LIT RELOP • LIT

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    LIT  go to state 115


State 103

   50 PRINT: T_cout T_OutputStream T_stringLiteral T_OutputStream T_endl •

    $default  reduce using rule 50 (PRINT)


State 104

   20 SWITCHBODY: T_openFlowerBracket • CASES T_closedFlowerBracket

    T_type              shift, and go to state 15
    T_cout              shift, and go to state 17
    T_cin               shift, and go to state 18
    T_Semicolon         shift, and go to state 116
    T_identifier        shift, and go to state 20
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_incr              shift, and go to state 24
    T_decr              shift, and go to state 25
    T_case              shift, and go to state 117
    T_break             shift, and go to state 27
    T_default           shift, and go to state 118
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31
    T_LogicalNot        shift, and go to state 32

    $default  reduce using rule 27 (CASES)

    CASES        go to state 119
    statement    go to state 120
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 105

   21 SWITCHBODY: T_Semicolon •

    $default  reduce using rule 21 (SWITCHBODY)


State 106

   13 LOOPS: T_switch T_openParenthesis COND T_closedParanthesis SWITCHBODY •

    $default  reduce using rule 13 (LOOPS)


State 107

   22 SWITCHBODY: statement • T_Semicolon

    T_Semicolon  shift, and go to state 121


State 108

    7 C: C • statement T_Semicolon
    8  | C • LOOPS
   17 LOOPBODY: T_openFlowerBracket C • T_closedFlowerBracket

    T_type                 shift, and go to state 15
    T_if                   shift, and go to state 16
    T_cout                 shift, and go to state 17
    T_cin                  shift, and go to state 18
    T_closedFlowerBracket  shift, and go to state 122
    T_identifier           shift, and go to state 20
    T_numericConstants     shift, and go to state 21
    T_stringLiteral        shift, and go to state 22
    T_character            shift, and go to state 23
    T_incr                 shift, and go to state 24
    T_decr                 shift, and go to state 25
    T_switch               shift, and go to state 26
    T_break                shift, and go to state 27
    T_intVal               shift, and go to state 28
    T_longVal              shift, and go to state 29
    T_doubleVal            shift, and go to state 30
    T_floatVal             shift, and go to state 31
    T_LogicalNot           shift, and go to state 32

    LOOPS        go to state 52
    statement    go to state 53
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 109

   14 ELSECHAIN: T_else • T_if T_openParenthesis COND T_closedParanthesis LOOPBODY ELSECHAIN
   15          | T_else • LOOPBODY

    T_type               shift, and go to state 15
    T_if                 shift, and go to state 123
    T_cout               shift, and go to state 17
    T_cin                shift, and go to state 18
    T_openFlowerBracket  shift, and go to state 95
    T_Semicolon          shift, and go to state 96
    T_identifier         shift, and go to state 20
    T_numericConstants   shift, and go to state 21
    T_stringLiteral      shift, and go to state 22
    T_character          shift, and go to state 23
    T_incr               shift, and go to state 24
    T_decr               shift, and go to state 25
    T_break              shift, and go to state 27
    T_intVal             shift, and go to state 28
    T_longVal            shift, and go to state 29
    T_doubleVal          shift, and go to state 30
    T_floatVal           shift, and go to state 31
    T_LogicalNot         shift, and go to state 32

    LOOPBODY     go to state 124
    statement    go to state 98
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 110

   12 LOOPS: T_if T_openParenthesis COND T_closedParanthesis LOOPBODY ELSECHAIN •

    $default  reduce using rule 12 (LOOPS)


State 111

   19 LOOPBODY: statement T_Semicolon •

    $default  reduce using rule 19 (LOOPBODY)


State 112

   35 COND: LIT RELOP LIT bin_boolop • LIT RELOP LIT

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    LIT  go to state 125


State 113

   39 COND: un_boolop T_openParenthesis LIT T_closedParanthesis •

    $default  reduce using rule 39 (COND)


State 114

   36 COND: un_boolop T_openParenthesis LIT RELOP • LIT T_closedParanthesis

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    LIT  go to state 126


State 115

   37 COND: un_boolop LIT RELOP LIT •

    $default  reduce using rule 37 (COND)


State 116

   24 CASES: T_Semicolon •

    $default  reduce using rule 24 (CASES)


State 117

   23 CASES: T_case • CASEVAL

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    CASEVAL  go to state 127
    LIT      go to state 128


State 118

   26 CASES: T_default • T_colon DEFCASEC

    T_colon  shift, and go to state 129


State 119

   20 SWITCHBODY: T_openFlowerBracket CASES • T_closedFlowerBracket

    T_closedFlowerBracket  shift, and go to state 130


State 120

   25 CASES: statement • T_Semicolon

    T_Semicolon  shift, and go to state 131


State 121

   22 SWITCHBODY: statement T_Semicolon •

    $default  reduce using rule 22 (SWITCHBODY)


State 122

   17 LOOPBODY: T_openFlowerBracket C T_closedFlowerBracket •

    $default  reduce using rule 17 (LOOPBODY)


State 123

   14 ELSECHAIN: T_else T_if • T_openParenthesis COND T_closedParanthesis LOOPBODY ELSECHAIN

    T_openParenthesis  shift, and go to state 132


State 124

   15 ELSECHAIN: T_else LOOPBODY •

    $default  reduce using rule 15 (ELSECHAIN)


State 125

   35 COND: LIT RELOP LIT bin_boolop LIT • RELOP LIT

    T_less           shift, and go to state 82
    T_less_equal     shift, and go to state 83
    T_greater        shift, and go to state 84
    T_greater_equal  shift, and go to state 85
    T_equal_equal    shift, and go to state 86
    T_not_equal      shift, and go to state 87

    RELOP  go to state 133


State 126

   36 COND: un_boolop T_openParenthesis LIT RELOP LIT • T_closedParanthesis

    T_closedParanthesis  shift, and go to state 134


State 127

   23 CASES: T_case CASEVAL •

    $default  reduce using rule 23 (CASES)


State 128

   54 CASEVAL: LIT • T_colon CASEC

    T_colon  shift, and go to state 135


State 129

   26 CASES: T_default T_colon • DEFCASEC

    T_type               shift, and go to state 15
    T_if                 shift, and go to state 16
    T_cout               shift, and go to state 17
    T_cin                shift, and go to state 18
    T_openFlowerBracket  shift, and go to state 19
    T_identifier         shift, and go to state 20
    T_numericConstants   shift, and go to state 21
    T_stringLiteral      shift, and go to state 22
    T_character          shift, and go to state 23
    T_incr               shift, and go to state 24
    T_decr               shift, and go to state 25
    T_switch             shift, and go to state 26
    T_case               shift, and go to state 136
    T_break              shift, and go to state 27
    T_intVal             shift, and go to state 28
    T_longVal            shift, and go to state 29
    T_doubleVal          shift, and go to state 30
    T_floatVal           shift, and go to state 31
    T_LogicalNot         shift, and go to state 32

    C            go to state 137
    LOOPS        go to state 34
    statement    go to state 35
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    DEFCASEC     go to state 138
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 130

   20 SWITCHBODY: T_openFlowerBracket CASES T_closedFlowerBracket •

    $default  reduce using rule 20 (SWITCHBODY)


State 131

   25 CASES: statement T_Semicolon •

    $default  reduce using rule 25 (CASES)


State 132

   14 ELSECHAIN: T_else T_if T_openParenthesis • COND T_closedParanthesis LOOPBODY ELSECHAIN

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31
    T_LogicalNot        shift, and go to state 32

    COND       go to state 139
    LIT        go to state 70
    un_boolop  go to state 71


State 133

   35 COND: LIT RELOP LIT bin_boolop LIT RELOP • LIT

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    LIT  go to state 140


State 134

   36 COND: un_boolop T_openParenthesis LIT RELOP LIT T_closedParanthesis •

    $default  reduce using rule 36 (COND)


State 135

   54 CASEVAL: LIT T_colon • CASEC

    T_type               shift, and go to state 15
    T_if                 shift, and go to state 16
    T_cout               shift, and go to state 17
    T_cin                shift, and go to state 18
    T_openFlowerBracket  shift, and go to state 19
    T_identifier         shift, and go to state 20
    T_numericConstants   shift, and go to state 21
    T_stringLiteral      shift, and go to state 22
    T_character          shift, and go to state 23
    T_incr               shift, and go to state 24
    T_decr               shift, and go to state 25
    T_switch             shift, and go to state 26
    T_case               shift, and go to state 141
    T_break              shift, and go to state 27
    T_default            shift, and go to state 142
    T_intVal             shift, and go to state 28
    T_longVal            shift, and go to state 29
    T_doubleVal          shift, and go to state 30
    T_floatVal           shift, and go to state 31
    T_LogicalNot         shift, and go to state 32

    C            go to state 143
    LOOPS        go to state 34
    statement    go to state 35
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    CASEC        go to state 144
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 136

   62 DEFCASEC: T_case • DEFCASEVAL

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    DEFCASEVAL  go to state 145
    LIT         go to state 146


State 137

    7 C: C • statement T_Semicolon
    8  | C • LOOPS
   61 DEFCASEC: C •
   63         | C • T_case DEFCASEVAL

    T_type              shift, and go to state 15
    T_if                shift, and go to state 16
    T_cout              shift, and go to state 17
    T_cin               shift, and go to state 18
    T_identifier        shift, and go to state 20
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_incr              shift, and go to state 24
    T_decr              shift, and go to state 25
    T_switch            shift, and go to state 26
    T_case              shift, and go to state 147
    T_break             shift, and go to state 27
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31
    T_LogicalNot        shift, and go to state 32

    $default  reduce using rule 61 (DEFCASEC)

    LOOPS        go to state 52
    statement    go to state 53
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 138

   26 CASES: T_default T_colon DEFCASEC •

    $default  reduce using rule 26 (CASES)


State 139

   14 ELSECHAIN: T_else T_if T_openParenthesis COND • T_closedParanthesis LOOPBODY ELSECHAIN

    T_closedParanthesis  shift, and go to state 148


State 140

   35 COND: LIT RELOP LIT bin_boolop LIT RELOP LIT •

    $default  reduce using rule 35 (COND)


State 141

   56 CASEC: T_case • CASEVAL

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    CASEVAL  go to state 149
    LIT      go to state 128


State 142

   58 CASEC: T_default • T_colon DEFCASEC

    T_colon  shift, and go to state 150


State 143

    7 C: C • statement T_Semicolon
    8  | C • LOOPS
   55 CASEC: C •
   57      | C • T_case CASEVAL
   59      | C • T_default T_colon DEFCASEC

    T_type              shift, and go to state 15
    T_if                shift, and go to state 16
    T_cout              shift, and go to state 17
    T_cin               shift, and go to state 18
    T_identifier        shift, and go to state 20
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_incr              shift, and go to state 24
    T_decr              shift, and go to state 25
    T_switch            shift, and go to state 26
    T_case              shift, and go to state 151
    T_break             shift, and go to state 27
    T_default           shift, and go to state 152
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31
    T_LogicalNot        shift, and go to state 32

    $default  reduce using rule 55 (CASEC)

    LOOPS        go to state 52
    statement    go to state 53
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 144

   54 CASEVAL: LIT T_colon CASEC •

    $default  reduce using rule 54 (CASEVAL)


State 145

   62 DEFCASEC: T_case DEFCASEVAL •

    $default  reduce using rule 62 (DEFCASEC)


State 146

   60 DEFCASEVAL: LIT • T_colon DEFCASEC

    T_colon  shift, and go to state 153


State 147

   63 DEFCASEC: C T_case • DEFCASEVAL

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    DEFCASEVAL  go to state 154
    LIT         go to state 146


State 148

   14 ELSECHAIN: T_else T_if T_openParenthesis COND T_closedParanthesis • LOOPBODY ELSECHAIN

    T_type               shift, and go to state 15
    T_cout               shift, and go to state 17
    T_cin                shift, and go to state 18
    T_openFlowerBracket  shift, and go to state 95
    T_Semicolon          shift, and go to state 96
    T_identifier         shift, and go to state 20
    T_numericConstants   shift, and go to state 21
    T_stringLiteral      shift, and go to state 22
    T_character          shift, and go to state 23
    T_incr               shift, and go to state 24
    T_decr               shift, and go to state 25
    T_break              shift, and go to state 27
    T_intVal             shift, and go to state 28
    T_longVal            shift, and go to state 29
    T_doubleVal          shift, and go to state 30
    T_floatVal           shift, and go to state 31
    T_LogicalNot         shift, and go to state 32

    LOOPBODY     go to state 155
    statement    go to state 98
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 149

   56 CASEC: T_case CASEVAL •

    $default  reduce using rule 56 (CASEC)


State 150

   58 CASEC: T_default T_colon • DEFCASEC

    T_type               shift, and go to state 15
    T_if                 shift, and go to state 16
    T_cout               shift, and go to state 17
    T_cin                shift, and go to state 18
    T_openFlowerBracket  shift, and go to state 19
    T_identifier         shift, and go to state 20
    T_numericConstants   shift, and go to state 21
    T_stringLiteral      shift, and go to state 22
    T_character          shift, and go to state 23
    T_incr               shift, and go to state 24
    T_decr               shift, and go to state 25
    T_switch             shift, and go to state 26
    T_case               shift, and go to state 136
    T_break              shift, and go to state 27
    T_intVal             shift, and go to state 28
    T_longVal            shift, and go to state 29
    T_doubleVal          shift, and go to state 30
    T_floatVal           shift, and go to state 31
    T_LogicalNot         shift, and go to state 32

    C            go to state 137
    LOOPS        go to state 34
    statement    go to state 35
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    DEFCASEC     go to state 156
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 151

   57 CASEC: C T_case • CASEVAL

    T_identifier        shift, and go to state 65
    T_numericConstants  shift, and go to state 21
    T_stringLiteral     shift, and go to state 22
    T_character         shift, and go to state 23
    T_intVal            shift, and go to state 28
    T_longVal           shift, and go to state 29
    T_doubleVal         shift, and go to state 30
    T_floatVal          shift, and go to state 31

    CASEVAL  go to state 157
    LIT      go to state 128


State 152

   59 CASEC: C T_default • T_colon DEFCASEC

    T_colon  shift, and go to state 158


State 153

   60 DEFCASEVAL: LIT T_colon • DEFCASEC

    T_type               shift, and go to state 15
    T_if                 shift, and go to state 16
    T_cout               shift, and go to state 17
    T_cin                shift, and go to state 18
    T_openFlowerBracket  shift, and go to state 19
    T_identifier         shift, and go to state 20
    T_numericConstants   shift, and go to state 21
    T_stringLiteral      shift, and go to state 22
    T_character          shift, and go to state 23
    T_incr               shift, and go to state 24
    T_decr               shift, and go to state 25
    T_switch             shift, and go to state 26
    T_case               shift, and go to state 136
    T_break              shift, and go to state 27
    T_intVal             shift, and go to state 28
    T_longVal            shift, and go to state 29
    T_doubleVal          shift, and go to state 30
    T_floatVal           shift, and go to state 31
    T_LogicalNot         shift, and go to state 32

    C            go to state 137
    LOOPS        go to state 34
    statement    go to state 35
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    DEFCASEC     go to state 159
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 154

   63 DEFCASEC: C T_case DEFCASEVAL •

    $default  reduce using rule 63 (DEFCASEC)


State 155

   14 ELSECHAIN: T_else T_if T_openParenthesis COND T_closedParanthesis LOOPBODY • ELSECHAIN

    T_else  shift, and go to state 109

    $default  reduce using rule 16 (ELSECHAIN)

    ELSECHAIN  go to state 160


State 156

   58 CASEC: T_default T_colon DEFCASEC •

    $default  reduce using rule 58 (CASEC)


State 157

   57 CASEC: C T_case CASEVAL •

    $default  reduce using rule 57 (CASEC)


State 158

   59 CASEC: C T_default T_colon • DEFCASEC

    T_type               shift, and go to state 15
    T_if                 shift, and go to state 16
    T_cout               shift, and go to state 17
    T_cin                shift, and go to state 18
    T_openFlowerBracket  shift, and go to state 19
    T_identifier         shift, and go to state 20
    T_numericConstants   shift, and go to state 21
    T_stringLiteral      shift, and go to state 22
    T_character          shift, and go to state 23
    T_incr               shift, and go to state 24
    T_decr               shift, and go to state 25
    T_switch             shift, and go to state 26
    T_case               shift, and go to state 136
    T_break              shift, and go to state 27
    T_intVal             shift, and go to state 28
    T_longVal            shift, and go to state 29
    T_doubleVal          shift, and go to state 30
    T_floatVal           shift, and go to state 31
    T_LogicalNot         shift, and go to state 32

    C            go to state 137
    LOOPS        go to state 34
    statement    go to state 35
    ASSIGN_EXPR  go to state 36
    ARITH_EXPR   go to state 37
    PRINT        go to state 38
    INPUT        go to state 39
    DEFCASEC     go to state 161
    LIT          go to state 40
    un_arop      go to state 41
    un_boolop    go to state 42


State 159

   60 DEFCASEVAL: LIT T_colon DEFCASEC •

    $default  reduce using rule 60 (DEFCASEVAL)


State 160

   14 ELSECHAIN: T_else T_if T_openParenthesis COND T_closedParanthesis LOOPBODY ELSECHAIN •

    $default  reduce using rule 14 (ELSECHAIN)


State 161

   59 CASEC: C T_default T_colon DEFCASEC •

    $default  reduce using rule 59 (CASEC)
